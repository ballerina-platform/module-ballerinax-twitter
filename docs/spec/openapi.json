{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Twitter API v2",
    "description" : "Twitter API v2 available endpoints",
    "termsOfService" : "https://developer.twitter.com/en/developer-terms/agreement-and-policy.html",
    "contact" : {
      "name" : "Twitter Developers",
      "url" : "https://developer.twitter.com/2/"
    },
    "license" : {
      "name" : "Twitter Developer Agreement and Policy",
      "url" : "https://developer.twitter.com/en/developer-terms/agreement-and-policy.html"
    },
    "version" : "2.100"
  },
  "servers" : [ {
    "url" : "https://api.twitter.com/2",
    "description" : "Twitter API"
  } ],
  "tags" : [ {
    "name" : "Bookmarks",
    "description" : "Endpoints related to retrieving, managing bookmarks of a user",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api/bookmarks"
    }
  }, {
    "name" : "Compliance",
    "description" : "Endpoints related to keeping X data in your systems compliant",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api/compliance/batch-tweet/introduction"
    }
  }, {
    "name" : "Direct Messages",
    "description" : "Endpoints related to retrieving, managing Direct Messages",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api/direct-messages"
    }
  }, {
    "name" : "General",
    "description" : "Miscellaneous endpoints for general API functionality",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api"
    }
  }, {
    "name" : "Lists",
    "description" : "Endpoints related to retrieving, managing Lists",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api/lists"
    }
  }, {
    "name" : "Spaces",
    "description" : "Endpoints related to retrieving, managing Spaces",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces"
    }
  }, {
    "name" : "Tweets",
    "description" : "Endpoints related to retrieving, searching, and modifying Tweets",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/lookup"
    }
  }, {
    "name" : "Users",
    "description" : "Endpoints related to retrieving, managing relationships of Users",
    "externalDocs" : {
      "description" : "Find out more",
      "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup"
    }
  } ],
  "paths" : {
    "/compliance/jobs" : {
      "get" : {
        "tags" : [ "Compliance" ],
        "summary" : "List Compliance Jobs",
        "description" : "Returns recent Compliance Jobs for a given job type and optional job status",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/get-compliance-jobs"
        },
        "operationId" : "listBatchComplianceJobs",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Type of Compliance Job to list",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "tweets", "users" ]
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Status of Compliance Job to list",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "created", "in_progress", "failed", "complete" ]
          }
        }, {
          "$ref" : "#/components/parameters/ComplianceJobFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ComplianceJobsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Compliance" ],
        "summary" : "Create compliance job",
        "description" : "Creates a compliance for the given job type",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/post-compliance-jobs"
        },
        "operationId" : "createBatchComplianceJob",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateComplianceJobRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateComplianceJobResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/compliance/jobs/{id}" : {
      "get" : {
        "tags" : [ "Compliance" ],
        "summary" : "Get Compliance Job",
        "description" : "Returns a single Compliance Job by ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/compliance/batch-compliance/api-reference/get-compliance-jobs-id"
        },
        "operationId" : "getBatchComplianceJob",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Compliance Job to retrieve",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/JobId"
          }
        }, {
          "$ref" : "#/components/parameters/ComplianceJobFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ComplianceJobsIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/dm_conversations" : {
      "post" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Create a new DM Conversation",
        "description" : "Creates a new DM Conversation.",
        "operationId" : "dmConversationIdCreate",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateDmConversationRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateDmEventResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/dm_conversations/with/{participantId}/dm_events" : {
      "get" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Get DM Events for a DM Conversation",
        "description" : "Returns DM Events for a DM Conversation",
        "operationId" : "getDmConversationsWithParticipantIdDmEvents",
        "parameters" : [ {
          "name" : "participantId",
          "in" : "path",
          "description" : "The ID of the participant user for the One to One DM conversation",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken32"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "event_types",
          "in" : "query",
          "description" : "The set of event_types to include in the results",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "example" : [ "MessageCreate", "ParticipantsLeave" ],
            "items" : {
              "type" : "string",
              "enum" : [ "MessageCreate", "ParticipantsJoin", "ParticipantsLeave" ]
            },
            "default" : [ "MessageCreate", "ParticipantsLeave", "ParticipantsJoin" ]
          },
          "x-ballerina-name" : "eventTypes"
        }, {
          "$ref" : "#/components/parameters/DmEventFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/DmEventExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2DmConversationsWithParticipantIdDmEventsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/dm_conversations/with/{participantId}/messages" : {
      "post" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Send a new message to a user",
        "description" : "Creates a new message for a DM Conversation with a participant user by ID",
        "operationId" : "dmConversationWithUserEventIdCreate",
        "parameters" : [ {
          "name" : "participantId",
          "in" : "path",
          "description" : "The ID of the recipient user that will receive the DM",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMessageRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateDmEventResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/dm_conversations/{dmConversationId}/messages" : {
      "post" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Send a new message to a DM Conversation",
        "description" : "Creates a new message for a DM Conversation specified by DM Conversation ID",
        "operationId" : "dmConversationByIdEventIdCreate",
        "parameters" : [ {
          "name" : "dmConversationId",
          "in" : "path",
          "description" : "The DM Conversation ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMessageRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CreateDmEventResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/dm_conversations/{id}/dm_events" : {
      "get" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Get DM Events for a DM Conversation",
        "description" : "Returns DM Events for a DM Conversation",
        "operationId" : "getDmConversationsIdDmEvents",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The DM Conversation ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/DmConversationId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken32"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "event_types",
          "in" : "query",
          "description" : "The set of event_types to include in the results",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "example" : [ "MessageCreate", "ParticipantsLeave" ],
            "items" : {
              "type" : "string",
              "enum" : [ "MessageCreate", "ParticipantsJoin", "ParticipantsLeave" ]
            },
            "default" : [ "MessageCreate", "ParticipantsLeave", "ParticipantsJoin" ]
          },
          "x-ballerina-name" : "eventTypes"
        }, {
          "$ref" : "#/components/parameters/DmEventFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/DmEventExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/dm_events" : {
      "get" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Get recent DM Events",
        "description" : "Returns recent DM Events across DM conversations",
        "operationId" : "getDmEvents",
        "parameters" : [ {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken32"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "event_types",
          "in" : "query",
          "description" : "The set of event_types to include in the results",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "example" : [ "MessageCreate", "ParticipantsLeave" ],
            "items" : {
              "type" : "string",
              "enum" : [ "MessageCreate", "ParticipantsJoin", "ParticipantsLeave" ]
            },
            "default" : [ "MessageCreate", "ParticipantsLeave", "ParticipantsJoin" ]
          },
          "x-ballerina-name" : "eventTypes"
        }, {
          "$ref" : "#/components/parameters/DmEventFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/DmEventExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2DmEventsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/dm_events/{eventId}" : {
      "get" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Get DM Events by id",
        "description" : "Returns DM Events by event id.",
        "operationId" : "getDmEventsById",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "dm event id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/DmEventId"
          }
        }, {
          "$ref" : "#/components/parameters/DmEventFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/DmEventExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2DmEventsEventIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Direct Messages" ],
        "summary" : "Delete Dm",
        "description" : "Delete a Dm Event that you own.",
        "operationId" : "dmEventDelete",
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "The ID of the direct-message event to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/DmEventId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeleteDmResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "dm.read", "dm.write" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/likes/compliance/stream" : {
      "get" : {
        "tags" : [ "Compliance" ],
        "summary" : "Likes Compliance stream",
        "description" : "Streams 100% of compliance data for Users",
        "operationId" : "getLikesComplianceStream",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Likes Compliance events will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp from which the Likes Compliance events will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LikesComplianceStreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/likes/firehose/stream" : {
      "get" : {
        "tags" : [ "Likes" ],
        "summary" : "Likes Firehose stream",
        "description" : "Streams 100% of public Likes.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-likes-firehose-stream"
        },
        "operationId" : "likesFirehoseStream",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Likes will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/LikeFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/LikeExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingLikeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/likes/sample10/stream" : {
      "get" : {
        "tags" : [ "Likes" ],
        "summary" : "Likes Sample 10 stream",
        "description" : "Streams 10% of public Likes.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/likes/firehose/api-reference/get-likes-sample10-stream"
        },
        "operationId" : "likesSample10Stream",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 2,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Likes will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/LikeFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/LikeExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingLikeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/lists" : {
      "post" : {
        "tags" : [ "Lists" ],
        "summary" : "Create List",
        "description" : "Creates a new List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/post-lists"
        },
        "operationId" : "listIdCreate",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.read", "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/lists/{id}" : {
      "get" : {
        "tags" : [ "Lists" ],
        "summary" : "List lookup by List ID.",
        "description" : "Returns a List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-lookup/api-reference/get-lists-id"
        },
        "operationId" : "listIdGet",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        }, {
          "$ref" : "#/components/parameters/ListFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/ListExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ListsIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "Lists" ],
        "summary" : "Update List.",
        "description" : "Update a List that you own.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/put-lists-id"
        },
        "operationId" : "listIdUpdate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List to modify",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListUpdateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListUpdateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Lists" ],
        "summary" : "Delete List",
        "description" : "Delete a List that you own.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/manage-lists/api-reference/delete-lists-id"
        },
        "operationId" : "listIdDelete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List to delete",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/lists/{id}/followers" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Returns User objects that follow a List by the provided List ID",
        "description" : "Returns a list of Users that follow a List by the provided List ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/get-users-id-followers"
        },
        "operationId" : "listGetFollowers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationTokenLong"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ListsIdFollowersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/lists/{id}/members" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Returns User objects that are members of a List by the provided List ID.",
        "description" : "Returns a list of Users that are members of a List by the provided List ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/get-users-id-list_memberships"
        },
        "operationId" : "listGetMembers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationTokenLong"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ListsIdMembersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Lists" ],
        "summary" : "Add a List member",
        "description" : "Causes a User to become a member of a List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/post-lists-id-members"
        },
        "operationId" : "listAddMember",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List for which to add a member",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListAddUserRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListMutateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/lists/{id}/members/{userId}" : {
      "delete" : {
        "tags" : [ "Lists" ],
        "summary" : "Remove a List member",
        "description" : "Causes a User to be removed from the members of a List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/delete-lists-id-members-user_id"
        },
        "operationId" : "listRemoveMember",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List to remove a member",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "The ID of User that will be removed from the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListMutateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/lists/{id}/tweets" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "List Posts timeline by List ID.",
        "description" : "Returns a list of Posts associated with the provided List ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-tweets/api-reference/get-lists-id-tweets"
        },
        "operationId" : "listsIdTweets",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2ListsIdTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/openapi.json" : {
      "get" : {
        "tags" : [ "General" ],
        "summary" : "Returns the OpenAPI Specification document.",
        "description" : "Full OpenAPI Specification in JSON format. (See https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)",
        "operationId" : "getOpenApiSpec",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The request was successful",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      }
    },
    "/spaces" : {
      "get" : {
        "tags" : [ "Spaces" ],
        "summary" : "Space lookup up Space IDs",
        "description" : "Returns a variety of information about the Spaces specified by the requested IDs",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces"
        },
        "operationId" : "findSpacesByIds",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "The list of Space IDs to return",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "pattern" : "^[a-zA-Z0-9]{1,13}$",
              "type" : "string",
              "description" : "The unique identifier of this Space.",
              "example" : "1SLjjRYNejbKM"
            }
          }
        }, {
          "$ref" : "#/components/parameters/SpaceFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/SpaceExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TopicFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "space.read", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/spaces/by/creator_ids" : {
      "get" : {
        "tags" : [ "Spaces" ],
        "summary" : "Space lookup by their creators",
        "description" : "Returns a variety of information about the Spaces created by the provided User IDs",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-by-creator-ids"
        },
        "operationId" : "findSpacesByCreatorIds",
        "parameters" : [ {
          "name" : "user_ids",
          "in" : "query",
          "description" : "The IDs of Users to search through",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            }
          },
          "x-ballerina-name" : "userIds"
        }, {
          "$ref" : "#/components/parameters/SpaceFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/SpaceExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TopicFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesByCreatorIdsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "space.read", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/spaces/search" : {
      "get" : {
        "tags" : [ "Spaces" ],
        "summary" : "Search for Spaces",
        "description" : "Returns Spaces that match the provided query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/search/api-reference/get-spaces-search"
        },
        "operationId" : "searchSpaces",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "The search query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxLength" : 2048,
            "minLength" : 1,
            "type" : "string",
            "example" : "crypto"
          },
          "example" : "crypto"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "The state of Spaces to search for",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "all",
            "enum" : [ "live", "scheduled", "all" ]
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The number of results to return",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "$ref" : "#/components/parameters/SpaceFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/SpaceExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TopicFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesSearchResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "space.read", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/spaces/{id}" : {
      "get" : {
        "tags" : [ "Spaces" ],
        "summary" : "Space lookup by Space ID",
        "description" : "Returns a variety of information about the Space specified by the requested ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id"
        },
        "operationId" : "findSpaceById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Space to be retrieved",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]{1,13}$",
            "type" : "string",
            "description" : "The unique identifier of this Space.",
            "example" : "1SLjjRYNejbKM"
          },
          "example" : "1YqKDqWqdPLsV"
        }, {
          "$ref" : "#/components/parameters/SpaceFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/SpaceExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TopicFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "space.read", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/spaces/{id}/buyers" : {
      "get" : {
        "tags" : [ "Spaces", "Tweets" ],
        "summary" : "Retrieve the list of Users who purchased a ticket to the given space",
        "description" : "Retrieves the list of Users who purchased a ticket to the given space",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-buyers"
        },
        "operationId" : "spaceBuyers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Space to be retrieved",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]{1,13}$",
            "type" : "string",
            "description" : "The unique identifier of this Space.",
            "example" : "1SLjjRYNejbKM"
          },
          "example" : "1YqKDqWqdPLsV"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken32"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesIdBuyersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "space.read", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/spaces/{id}/tweets" : {
      "get" : {
        "tags" : [ "Spaces", "Tweets" ],
        "summary" : "Retrieve Posts from a Space.",
        "description" : "Retrieves Posts shared in the specified Space.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/spaces/lookup/api-reference/get-spaces-id-tweets"
        },
        "operationId" : "spaceTweets",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Space to be retrieved",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[a-zA-Z0-9]{1,13}$",
            "type" : "string",
            "description" : "The unique identifier of this Space.",
            "example" : "1SLjjRYNejbKM"
          },
          "example" : "1YqKDqWqdPLsV"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The number of Posts to fetch from the provided space. If not provided, the value will default to the maximum of 100",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "example" : 25,
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2SpacesIdTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "space.read", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/trends/by/woeid/{woeid}" : {
      "get" : {
        "tags" : [ "Trends" ],
        "summary" : "Trends",
        "description" : "Returns the Trend associated with the supplied WoeId.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/trends/api-reference/get-trends-by-woeid"
        },
        "operationId" : "getTrends",
        "parameters" : [ {
          "name" : "woeid",
          "in" : "path",
          "description" : "The WOEID of the place to lookup a trend for",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          },
          "example" : "2244994945"
        }, {
          "$ref" : "#/components/parameters/TrendFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TrendsByWoeidWoeidResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/tweets" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Post lookup by Post IDs",
        "description" : "Returns a variety of information about the Post specified by the requested ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets"
        },
        "operationId" : "findTweetsById",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "A comma separated list of Post IDs. Up to 100 are allowed in a single request",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TweetId"
            }
          }
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Tweets" ],
        "summary" : "Creation of a Post",
        "description" : "Causes the User to create a Post under the authorized account.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/post-tweets"
        },
        "operationId" : "createTweet",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TweetCreateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "tweet.write", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/compliance/stream" : {
      "get" : {
        "tags" : [ "Compliance" ],
        "summary" : "Posts Compliance stream",
        "description" : "Streams 100% of compliance data for Posts",
        "operationId" : "getTweetsComplianceStream",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Post Compliance events will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Post Compliance events will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetComplianceStreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/counts/all" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Full archive search counts",
        "description" : "Returns Post Counts that match a search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-all"
        },
        "operationId" : "tweetCountsFullArchiveSearch",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "One query/rule/filter for matching Posts. Refer to https://t.co/rulelength to identify the max query length",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxLength" : 4096,
            "minLength" : 1,
            "type" : "string",
            "example" : "(from:TwitterDev OR from:TwitterAPI) has:media -is:retweet"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent 7 days) from which the Posts will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Posts will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "endTime"
        }, {
          "name" : "since_id",
          "in" : "query",
          "description" : "Returns results with a Post ID greater than (that is, more recent than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "sinceId"
        }, {
          "name" : "until_id",
          "in" : "query",
          "description" : "Returns results with a Post ID less than (that is, older than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "untilId"
        }, {
          "name" : "next_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "nextToken"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "granularity",
          "in" : "query",
          "description" : "The granularity for the search counts results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "hour",
            "enum" : [ "minute", "hour", "day" ]
          }
        }, {
          "$ref" : "#/components/parameters/SearchCountFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsCountsAllResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/tweets/counts/recent" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Recent search counts",
        "description" : "Returns Post Counts from the last 7 days that match a search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/counts/api-reference/get-tweets-counts-recent"
        },
        "operationId" : "tweetCountsRecentSearch",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "One query/rule/filter for matching Posts. Refer to https://t.co/rulelength to identify the max query length",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxLength" : 4096,
            "minLength" : 1,
            "type" : "string",
            "example" : "(from:TwitterDev OR from:TwitterAPI) has:media -is:retweet"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent 7 days) from which the Posts will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Posts will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "endTime"
        }, {
          "name" : "since_id",
          "in" : "query",
          "description" : "Returns results with a Post ID greater than (that is, more recent than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "sinceId"
        }, {
          "name" : "until_id",
          "in" : "query",
          "description" : "Returns results with a Post ID less than (that is, older than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "untilId"
        }, {
          "name" : "next_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "nextToken"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "granularity",
          "in" : "query",
          "description" : "The granularity for the search counts results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "hour",
            "enum" : [ "minute", "hour", "day" ]
          }
        }, {
          "$ref" : "#/components/parameters/SearchCountFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsCountsRecentResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/tweets/firehose/stream" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Firehose stream",
        "description" : "Streams 100% of public Posts.",
        "operationId" : "getTweetsFirehoseStream",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 20,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/firehose/stream/lang/en" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "English Language Firehose stream",
        "description" : "Streams 100% of English Language public Posts.",
        "operationId" : "getTweetsFirehoseStreamLangEn",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 8,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/firehose/stream/lang/ja" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Japanese Language Firehose stream",
        "description" : "Streams 100% of Japanese Language public Posts.",
        "operationId" : "getTweetsFirehoseStreamLangJa",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 2,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/firehose/stream/lang/ko" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Korean Language Firehose stream",
        "description" : "Streams 100% of Korean Language public Posts.",
        "operationId" : "getTweetsFirehoseStreamLangKo",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 2,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/firehose/stream/lang/pt" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Portuguese Language Firehose stream",
        "description" : "Streams 100% of Portuguese Language public Posts.",
        "operationId" : "getTweetsFirehoseStreamLangPt",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 2,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/label/stream" : {
      "get" : {
        "tags" : [ "Compliance" ],
        "summary" : "Posts Label stream",
        "description" : "Streams 100% of labeling events applied to Posts",
        "operationId" : "getTweetsLabelStream",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Post labels will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp from which the Post labels will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetLabelStreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/sample/stream" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Sample stream",
        "description" : "Streams a deterministic 1% of public Posts.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/volume-streams/api-reference/get-tweets-sample-stream"
        },
        "operationId" : "sampleStream",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/sample10/stream" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Sample 10% stream",
        "description" : "Streams a deterministic 10% of public Posts.",
        "operationId" : "getTweetsSample10Stream",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 2,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsSample10StreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/search/all" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Full-archive search",
        "description" : "Returns Posts that match a search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-all"
        },
        "operationId" : "tweetsFullarchiveSearch",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "One query/rule/filter for matching Posts. Refer to https://t.co/rulelength to identify the max query length",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxLength" : 4096,
            "minLength" : 1,
            "type" : "string",
            "example" : "(from:TwitterDev OR from:TwitterAPI) has:media -is:retweet"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp from which the Posts will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Posts will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "endTime"
        }, {
          "name" : "since_id",
          "in" : "query",
          "description" : "Returns results with a Post ID greater than (that is, more recent than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "sinceId"
        }, {
          "name" : "until_id",
          "in" : "query",
          "description" : "Returns results with a Post ID less than (that is, older than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "untilId"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of search results to be returned by a request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 500,
            "minimum" : 10,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "next_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "nextToken"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "sort_order",
          "in" : "query",
          "description" : "This order in which to return results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "recency", "relevancy" ]
          },
          "x-ballerina-name" : "sortOrder"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsSearchAllResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/tweets/search/recent" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Recent search",
        "description" : "Returns Posts from the last 7 days that match a search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/search/api-reference/get-tweets-search-recent"
        },
        "operationId" : "tweetsRecentSearch",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "One query/rule/filter for matching Posts. Refer to https://t.co/rulelength to identify the max query length",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxLength" : 4096,
            "minLength" : 1,
            "type" : "string",
            "example" : "(from:TwitterDev OR from:TwitterAPI) has:media -is:retweet"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp from which the Posts will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Posts will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "x-ballerina-name" : "endTime"
        }, {
          "name" : "since_id",
          "in" : "query",
          "description" : "Returns results with a Post ID greater than (that is, more recent than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "sinceId"
        }, {
          "name" : "until_id",
          "in" : "query",
          "description" : "Returns results with a Post ID less than (that is, older than) the specified ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "untilId"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of search results to be returned by a request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 10,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "next_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "nextToken"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "sort_order",
          "in" : "query",
          "description" : "This order in which to return results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "recency", "relevancy" ]
          },
          "x-ballerina-name" : "sortOrder"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsSearchRecentResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/search/stream" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Filtered stream",
        "description" : "Streams Posts matching the stream's active rule set.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-tweets-search-stream"
        },
        "operationId" : "searchStream",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FilteredStreamingTweetResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/tweets/search/stream/rules" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Rules lookup",
        "description" : "Returns rules from a User's active rule set. Users can fetch all of their rules or a subset, specified by the provided rule ids.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-tweets-search-stream-rules"
        },
        "operationId" : "getRules",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "A comma-separated list of Rule IDs",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RuleId"
            }
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 1000
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This value is populated by passing the 'next_token' returned in a request to paginate through results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maxLength" : 16,
            "minLength" : 16,
            "type" : "string"
          },
          "x-ballerina-name" : "paginationToken"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RulesLookupResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Tweets" ],
        "summary" : "Add/Delete rules",
        "description" : "Add or delete rules from a User's active rule set. Users can provide unique, optionally tagged rules to add. Users can delete their entire rule set or a subset specified by rule ids or values.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/post-tweets-search-stream-rules"
        },
        "operationId" : "addOrDeleteRules",
        "parameters" : [ {
          "name" : "dry_run",
          "in" : "query",
          "description" : "Dry Run can be used with both the add and delete action, with the expected result given, but without actually taking any action in the system (meaning the end state will always be as it was when the request was submitted). This is particularly useful to validate rule changes",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "dryRun"
        }, {
          "name" : "delete_all",
          "in" : "query",
          "description" : "Delete All can be used to delete all of the rules associated this client app, it should be specified with no other parameters. Once deleted, rules cannot be recovered",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          },
          "x-ballerina-name" : "deleteAll"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddOrDeleteRulesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddOrDeleteRulesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/tweets/search/stream/rules/counts" : {
      "get" : {
        "tags" : [ "General" ],
        "summary" : "Rules Count",
        "description" : "Returns the counts of rules from a User's active rule set, to reflect usage by project and application.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/filtered-stream/api-reference/get-tweets-search-stream-rules-counts"
        },
        "operationId" : "getRuleCount",
        "parameters" : [ {
          "$ref" : "#/components/parameters/RulesCountFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsSearchStreamRulesCountsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/tweets/{id}" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Post lookup by Post ID",
        "description" : "Returns a variety of information about the Post specified by the requested ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/lookup/api-reference/get-tweets-id"
        },
        "operationId" : "findTweetById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "A single Post ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "Tweets" ],
        "summary" : "Post delete by Post ID",
        "description" : "Delete specified Post (in the path) by ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/manage-tweets/api-reference/delete-tweets-id"
        },
        "operationId" : "deleteTweetById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Post to be deleted",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "tweet.write", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/{id}/liking_users" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Returns User objects that have liked the provided Post ID",
        "description" : "Returns a list of Users that have liked the provided Post ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/get-tweets-id-liking_users"
        },
        "operationId" : "tweetsIdLikingUsers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "A single Post ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdLikingUsersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "like.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/{id}/quote_tweets" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Retrieve Posts that quote a Post.",
        "description" : "Returns a variety of information about each Post that quotes the Post specified by the requested ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/quote-tweets/api-reference/get-tweets-id-quote_tweets"
        },
        "operationId" : "findTweetsThatQuoteATweet",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "A single Post ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results to be returned",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 10,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "The set of entities to exclude (e.g. 'replies' or 'retweets')",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "example" : [ "replies", "retweets" ],
            "items" : {
              "type" : "string",
              "enum" : [ "replies", "retweets" ]
            }
          }
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdQuoteTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/{id}/retweeted_by" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Returns User objects that have retweeted the provided Post ID",
        "description" : "Returns a list of Users that have retweeted the provided Post ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/get-tweets-id-retweeted_by"
        },
        "operationId" : "tweetsIdRetweetingUsers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "A single Post ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdRetweetedByResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/{id}/retweets" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Retrieve Posts that repost a Post.",
        "description" : "Returns a variety of information about each Post that has retweeted the Post specified by the requested ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/get-tweets-id-retweets"
        },
        "operationId" : "findTweetsThatRetweetATweet",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "A single Post ID",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2TweetsIdRetweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/tweets/{tweetId}/hidden" : {
      "put" : {
        "tags" : [ "Tweets" ],
        "summary" : "Hide replies",
        "description" : "Hides or unhides a reply to an owned conversation.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/hide-replies/api-reference/put-tweets-id-hidden"
        },
        "operationId" : "hideReplyById",
        "parameters" : [ {
          "name" : "tweetId",
          "in" : "path",
          "description" : "The ID of the reply that you want to hide or unhide",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TweetHideRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TweetHideResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.moderate.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/usage/tweets" : {
      "get" : {
        "tags" : [ "Usage" ],
        "summary" : "Post Usage",
        "description" : "Returns the Post Usage.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/usage/tweets/api-reference/get-usage-tweets"
        },
        "operationId" : "getUsageTweets",
        "parameters" : [ {
          "name" : "days",
          "in" : "query",
          "description" : "The number of days for which you need usage for",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 90,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 7
          }
        }, {
          "$ref" : "#/components/parameters/UsageFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsageTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ]
      }
    },
    "/users" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "User lookup by IDs",
        "description" : "This endpoint returns information about Users. Specify Users by their ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users"
        },
        "operationId" : "findUsersById",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "A list of User IDs, comma-separated. You can specify up to 100 IDs",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            }
          },
          "example" : "2244994945,6253282,12"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/by" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "User lookup by usernames",
        "description" : "This endpoint returns information about Users. Specify Users by their username.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by"
        },
        "operationId" : "findUsersByUsername",
        "parameters" : [ {
          "name" : "usernames",
          "in" : "query",
          "description" : "A list of usernames, comma-separated",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 100,
            "minItems" : 1,
            "type" : "array",
            "example" : "TwitterDev,TwitterAPI",
            "items" : {
              "pattern" : "^[A-Za-z0-9_]{1,15}$",
              "type" : "string",
              "description" : "The X handle (screen name) of this User."
            }
          }
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersByResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/by/username/{username}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "User lookup by username",
        "description" : "This endpoint returns information about a User. Specify User by username.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-by-username-username"
        },
        "operationId" : "findUserByUsername",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "A username",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "^[A-Za-z0-9_]{1,15}$",
            "type" : "string"
          },
          "example" : "TwitterDev"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersByUsernameUsernameResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/compliance/stream" : {
      "get" : {
        "tags" : [ "Compliance" ],
        "summary" : "Users Compliance stream",
        "description" : "Streams 100% of compliance data for Users",
        "operationId" : "getUsersComplianceStream",
        "parameters" : [ {
          "name" : "backfill_minutes",
          "in" : "query",
          "description" : "The number of minutes of backfill requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "backfillMinutes"
        }, {
          "name" : "partition",
          "in" : "query",
          "description" : "The partition number",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 4,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the User Compliance events will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp from which the User Compliance events will be provided",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserComplianceStreamResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        } ],
        "x-twitter-streaming" : true
      }
    },
    "/users/me" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "User lookup me",
        "description" : "This endpoint returns information about the requesting User.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-me"
        },
        "operationId" : "findMyUser",
        "parameters" : [ {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersMeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/search" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "User search",
        "description" : "Returns Users that match a search query.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-search"
        },
        "operationId" : "searchUserByQuery",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "TThe the query string by which to query for users",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/UserSearchQuery"
          },
          "example" : "someXUser"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "next_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "nextToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersSearchResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "User lookup by ID",
        "description" : "This endpoint returns information about a User. Specify User by ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/lookup/api-reference/get-users-id"
        },
        "operationId" : "findUserById",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/blocking" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Returns User objects that are blocked by provided User ID",
        "description" : "Returns a list of Users that are blocked by the provided User ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/blocks/api-reference/get-users-blocking"
        },
        "operationId" : "usersIdBlocking",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User for whom to return results",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken32"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdBlockingResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "block.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/bookmarks" : {
      "get" : {
        "tags" : [ "Bookmarks" ],
        "summary" : "Bookmarks by User",
        "description" : "Returns Post objects that have been bookmarked by the requesting User",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/get-users-id-bookmarks"
        },
        "operationId" : "getUsersIdBookmarks",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User for whom to return results",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdBookmarksResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "bookmark.read", "tweet.read", "users.read" ]
        } ]
      },
      "post" : {
        "tags" : [ "Bookmarks" ],
        "summary" : "Add Post to Bookmarks",
        "description" : "Adds a Post (ID in the body) to the requesting User's (in the path) bookmarks",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/post-users-id-bookmarks"
        },
        "operationId" : "postUsersIdBookmarks",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User for whom to add bookmarks",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BookmarkAddRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkMutationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "bookmark.write", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/users/{id}/bookmarks/{tweetId}" : {
      "delete" : {
        "tags" : [ "Bookmarks" ],
        "summary" : "Remove a bookmarked Post",
        "description" : "Removes a Post from the requesting User's bookmarked Posts.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/bookmarks/api-reference/delete-users-id-bookmarks-tweet_id"
        },
        "operationId" : "usersIdBookmarksDelete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User whose bookmark is to be removed",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "tweetId",
          "in" : "path",
          "description" : "The ID of the Post that the source User is removing from bookmarks",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BookmarkMutationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "bookmark.write", "tweet.read", "users.read" ]
        } ]
      }
    },
    "/users/{id}/followed_lists" : {
      "get" : {
        "tags" : [ "Lists" ],
        "summary" : "Get User's Followed Lists",
        "description" : "Returns a User's followed Lists.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-follows/api-reference/get-users-id-followed_lists"
        },
        "operationId" : "userFollowedLists",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationTokenLong"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/ListFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/ListExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdFollowedListsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Lists" ],
        "summary" : "Follow a List",
        "description" : "Causes a User to follow a List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-follows/api-reference/post-users-id-followed-lists"
        },
        "operationId" : "listUserFollow",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that will follow the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListFollowedRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListFollowedResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/followed_lists/{listId}" : {
      "delete" : {
        "tags" : [ "Lists" ],
        "summary" : "Unfollow a List",
        "description" : "Causes a User to unfollow a List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-follows/api-reference/delete-users-id-followed-lists-list_id"
        },
        "operationId" : "listUserUnfollow",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that will unfollow the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "listId",
          "in" : "path",
          "description" : "The ID of the List to unfollow",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListFollowedResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/followers" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Followers by User ID",
        "description" : "Returns a list of Users who are followers of the specified User ID.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/get-users-id-followers"
        },
        "operationId" : "usersIdFollowers",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken32"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdFollowersResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "follows.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/following" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Following by User ID",
        "description" : "Returns a list of Users that are being followed by the provided User ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/get-users-id-following"
        },
        "operationId" : "usersIdFollowing",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken32"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdFollowingResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "follows.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Follow User",
        "description" : "Causes the User(in the path) to follow, or “request to follow” for protected Users, the target User. The User(in the path) must match the User context authorizing the request",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/post-users-source_user_id-following"
        },
        "operationId" : "usersIdFollow",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to follow the target User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UsersFollowingCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersFollowingCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "follows.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/liked_tweets" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "Returns Post objects liked by the provided User ID",
        "description" : "Returns a list of Posts liked by the provided User ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/get-users-id-liked_tweets"
        },
        "operationId" : "usersIdLikedTweets",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 5,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdLikedTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "like.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/likes" : {
      "post" : {
        "tags" : [ "Tweets" ],
        "summary" : "Causes the User (in the path) to like the specified Post",
        "description" : "Causes the User (in the path) to like the specified Post. The User in the path must match the User context authorizing the request.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/post-users-id-likes"
        },
        "operationId" : "usersIdLike",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to like the Post",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UsersLikesCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersLikesCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "like.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/likes/{tweetId}" : {
      "delete" : {
        "tags" : [ "Tweets" ],
        "summary" : "Causes the User (in the path) to unlike the specified Post",
        "description" : "Causes the User (in the path) to unlike the specified Post. The User must match the User context authorizing the request",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/likes/api-reference/delete-users-id-likes-tweet_id"
        },
        "operationId" : "usersIdUnlike",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to unlike the Post",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "tweetId",
          "in" : "path",
          "description" : "The ID of the Post that the User is requesting to unlike",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersLikesDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "like.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/list_memberships" : {
      "get" : {
        "tags" : [ "Lists" ],
        "summary" : "Get a User's List Memberships",
        "description" : "Get a User's List Memberships.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-members/api-reference/get-users-id-list_memberships"
        },
        "operationId" : "getUserListMemberships",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationTokenLong"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/ListFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/ListExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdListMembershipsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/mentions" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "User mention timeline by User ID",
        "description" : "Returns Post objects that mention username associated to the provided User ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-mentions"
        },
        "operationId" : "usersIdMentions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "since_id",
          "in" : "query",
          "description" : "The minimum Post ID to be included in the result set. This parameter takes precedence over start_time if both are specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "x-ballerina-name" : "sinceId"
        }, {
          "name" : "until_id",
          "in" : "query",
          "description" : "The maximum Post ID to be included in the result set. This parameter takes precedence over end_time if both are specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "example" : "1346889436626259968",
          "x-ballerina-name" : "untilId"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 5,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Posts will be provided. The since_id parameter takes precedence if it is also specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided. The until_id parameter takes precedence if it is also specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdMentionsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/muting" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Returns User objects that are muted by the provided User ID",
        "description" : "Returns a list of Users that are muted by the provided User ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/get-users-muting"
        },
        "operationId" : "usersIdMuting",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User for whom to return results",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationTokenLong"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdMutingResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "mute.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Mute User by User ID.",
        "description" : "Causes the User (in the path) to mute the target User. The User (in the path) must match the User context authorizing the request.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/post-users-user_id-muting"
        },
        "operationId" : "usersIdMute",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to mute the target User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MuteUserRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MuteUserMutationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "mute.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/owned_lists" : {
      "get" : {
        "tags" : [ "Lists" ],
        "summary" : "Get a User's Owned Lists.",
        "description" : "Get a User's Owned Lists.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/list-lookup/api-reference/get-users-id-owned_lists"
        },
        "operationId" : "listUserOwnedLists",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get a specified 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationTokenLong"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "$ref" : "#/components/parameters/ListFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/ListExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdOwnedListsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/pinned_lists" : {
      "get" : {
        "tags" : [ "Lists" ],
        "summary" : "Get a User's Pinned Lists",
        "description" : "Get a User's Pinned Lists.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/pinned-lists/api-reference/get-users-id-pinned_lists"
        },
        "operationId" : "listUserPinnedLists",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User for whom to return results",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "$ref" : "#/components/parameters/ListFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/ListExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdPinnedListsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.read", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "Lists" ],
        "summary" : "Pin a List",
        "description" : "Causes a User to pin a List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/pinned-lists/api-reference/post-users-id-pinned-lists"
        },
        "operationId" : "listUserPin",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that will pin the List",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ListPinnedRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListPinnedResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/pinned_lists/{listId}" : {
      "delete" : {
        "tags" : [ "Lists" ],
        "summary" : "Unpin a List",
        "description" : "Causes a User to remove a pinned List.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/lists/pinned-lists/api-reference/delete-users-id-pinned-lists-list_id"
        },
        "operationId" : "listUserUnpin",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User for whom to return results",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "listId",
          "in" : "path",
          "description" : "The ID of the List to unpin",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/ListId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListUnpinResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "list.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/retweets" : {
      "post" : {
        "tags" : [ "Tweets" ],
        "summary" : "Causes the User (in the path) to repost the specified Post.",
        "description" : "Causes the User (in the path) to repost the specified Post. The User in the path must match the User context authorizing the request.",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/post-users-id-retweets"
        },
        "operationId" : "usersIdRetweets",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to repost the Post",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UsersRetweetsCreateRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersRetweetsCreateResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "tweet.write", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/retweets/{sourceTweetId}" : {
      "delete" : {
        "tags" : [ "Tweets" ],
        "summary" : "Causes the User (in the path) to unretweet the specified Post",
        "description" : "Causes the User (in the path) to unretweet the specified Post. The User must match the User context authorizing the request",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/retweets/api-reference/delete-users-id-retweets-tweet_id"
        },
        "operationId" : "usersIdUnretweets",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to repost the Post",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "sourceTweetId",
          "in" : "path",
          "description" : "The ID of the Post that the User is requesting to unretweet",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersRetweetsDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "tweet.write", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/timelines/reverse_chronological" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "User home timeline by User ID",
        "description" : "Returns Post objects that appears in the provided User ID's home timeline",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-reverse-chronological"
        },
        "operationId" : "usersIdTimeline",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the authenticated source User to list Reverse Chronological Timeline Posts of",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "since_id",
          "in" : "query",
          "description" : "The minimum Post ID to be included in the result set. This parameter takes precedence over start_time if both are specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "example" : "791775337160081409",
          "x-ballerina-name" : "sinceId"
        }, {
          "name" : "until_id",
          "in" : "query",
          "description" : "The maximum Post ID to be included in the result set. This parameter takes precedence over end_time if both are specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "example" : "1346889436626259968",
          "x-ballerina-name" : "untilId"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "The set of entities to exclude (e.g. 'replies' or 'retweets')",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "uniqueItems" : true,
            "type" : "array",
            "example" : [ "replies", "retweets" ],
            "items" : {
              "type" : "string",
              "enum" : [ "replies", "retweets" ]
            }
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Posts will be provided. The since_id parameter takes precedence if it is also specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided. The until_id parameter takes precedence if it is also specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdTimelinesReverseChronologicalResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{id}/tweets" : {
      "get" : {
        "tags" : [ "Tweets" ],
        "summary" : "User Posts timeline by User ID",
        "description" : "Returns a list of Posts authored by the provided User ID",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/tweets/timelines/api-reference/get-users-id-tweets"
        },
        "operationId" : "usersIdTweets",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the User to lookup",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "example" : "2244994945"
        }, {
          "name" : "since_id",
          "in" : "query",
          "description" : "The minimum Post ID to be included in the result set. This parameter takes precedence over start_time if both are specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "example" : "791775337160081409",
          "x-ballerina-name" : "sinceId"
        }, {
          "name" : "until_id",
          "in" : "query",
          "description" : "The maximum Post ID to be included in the result set. This parameter takes precedence over end_time if both are specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "example" : "1346889436626259968",
          "x-ballerina-name" : "untilId"
        }, {
          "name" : "max_results",
          "in" : "query",
          "description" : "The maximum number of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 100,
            "minimum" : 5,
            "type" : "integer",
            "format" : "int32"
          },
          "x-ballerina-name" : "maxResults"
        }, {
          "name" : "pagination_token",
          "in" : "query",
          "description" : "This parameter is used to get the next 'page' of results",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "$ref" : "#/components/schemas/PaginationToken36"
          },
          "x-ballerina-name" : "paginationToken"
        }, {
          "name" : "exclude",
          "in" : "query",
          "description" : "The set of entities to exclude (e.g. 'replies' or 'retweets')",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "example" : [ "replies", "retweets" ],
            "items" : {
              "type" : "string",
              "enum" : [ "replies", "retweets" ]
            }
          }
        }, {
          "name" : "start_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Posts will be provided. The since_id parameter takes precedence if it is also specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-01T18:40:40.000Z",
          "x-ballerina-name" : "startTime"
        }, {
          "name" : "end_time",
          "in" : "query",
          "description" : "YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Posts will be provided. The until_id parameter takes precedence if it is also specified",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          },
          "example" : "2021-02-14T18:40:40.000Z",
          "x-ballerina-name" : "endTime"
        }, {
          "$ref" : "#/components/parameters/TweetFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/TweetExpansionsParameter"
        }, {
          "$ref" : "#/components/parameters/MediaFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PollFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/UserFieldsParameter"
        }, {
          "$ref" : "#/components/parameters/PlaceFieldsParameter"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Get2UsersIdTweetsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "BearerToken" : [ ]
        }, {
          "OAuth2UserToken" : [ "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{sourceUserId}/following/{targetUserId}" : {
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Unfollow User",
        "description" : "Causes the source User to unfollow the target User. The source User must match the User context authorizing the request",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/follows/api-reference/delete-users-source_id-following"
        },
        "operationId" : "usersIdUnfollow",
        "parameters" : [ {
          "name" : "sourceUserId",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to unfollow the target User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "targetUserId",
          "in" : "path",
          "description" : "The ID of the User that the source User is requesting to unfollow",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UsersFollowingDeleteResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "follows.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    },
    "/users/{sourceUserId}/muting/{targetUserId}" : {
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Unmute User by User ID",
        "description" : "Causes the source User to unmute the target User. The source User must match the User context authorizing the request",
        "externalDocs" : {
          "url" : "https://developer.twitter.com/en/docs/twitter-api/users/mutes/api-reference/delete-users-user_id-muting"
        },
        "operationId" : "usersIdUnmute",
        "parameters" : [ {
          "name" : "sourceUserId",
          "in" : "path",
          "description" : "The ID of the authenticated source User that is requesting to unmute the target User",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserIdMatchesAuthenticatedUser"
          }
        }, {
          "name" : "targetUserId",
          "in" : "path",
          "description" : "The ID of the User that the source User is requesting to unmute",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "$ref" : "#/components/schemas/UserId"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The request has succeeded",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MuteUserMutationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "The request has failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              },
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            }
          }
        },
        "security" : [ {
          "OAuth2UserToken" : [ "mute.write", "tweet.read", "users.read" ]
        }, {
          "UserToken" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Get2UsersIdBlockingResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "PreviousToken" : {
        "minLength" : 1,
        "type" : "string",
        "description" : "The previous token"
      },
      "CreatedAt" : {
        "type" : "string",
        "description" : "Creation time of the compliance job",
        "format" : "date-time",
        "example" : "2021-01-06T18:40:40Z"
      },
      "ListPinnedRequest" : {
        "required" : [ "list_id" ],
        "type" : "object",
        "properties" : {
          "list_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListId"
            } ],
            "x-ballerina-name" : "listId"
          }
        }
      },
      "Get2TweetsCountsAllResponseMeta" : {
        "type" : "object",
        "properties" : {
          "total_tweet_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Aggregate"
            } ],
            "x-ballerina-name" : "totalTweetCount"
          },
          "oldest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OldestId"
            } ],
            "x-ballerina-name" : "oldestId"
          },
          "newest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NewestId"
            } ],
            "x-ballerina-name" : "newestId"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          }
        }
      },
      "Get2TweetsFirehoseStreamLangKoResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UnlikeComplianceSchema" : {
        "required" : [ "event_at", "favorite" ],
        "type" : "object",
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "favorite" : {
            "$ref" : "#/components/schemas/UnlikeComplianceSchemaFavorite"
          }
        }
      },
      "Get2SpacesIdTweetsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "UserComplianceSchema" : {
        "required" : [ "event_at", "user" ],
        "type" : "object",
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserComplianceSchemaUser"
          }
        }
      },
      "Get2SpacesIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Space"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetUnviewableSchema" : {
        "required" : [ "public_tweet_unviewable" ],
        "type" : "object",
        "properties" : {
          "public_tweet_unviewable" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetUnviewable"
            } ],
            "x-ballerina-name" : "publicTweetUnviewable"
          }
        }
      },
      "HttpStatusCode" : {
        "maximum" : 599,
        "minimum" : 100,
        "type" : "integer",
        "description" : "HTTP Status Code"
      },
      "TweetLabelData" : {
        "description" : "Tweet label data",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TweetNoticeSchema"
        }, {
          "$ref" : "#/components/schemas/TweetUnviewableSchema"
        } ]
      },
      "UserScrubGeoObjectSchema" : {
        "required" : [ "event_at", "up_to_tweet_id", "user" ],
        "type" : "object",
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserScrubGeoObjectSchemaUser"
          },
          "up_to_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "upToTweetId"
          }
        }
      },
      "Get2UsersIdLikedTweetsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "CreateComplianceJobRequest" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "resumable" : {
            "type" : "boolean",
            "description" : "If true, this endpoint will return a pre-signed URL with resumable uploads enabled"
          },
          "name" : {
            "$ref" : "#/components/schemas/ComplianceJobName"
          },
          "type" : {
            "type" : "string",
            "description" : "Type of compliance job to list",
            "enum" : [ "tweets", "users" ]
          }
        },
        "description" : "A request to create a new batch compliance job"
      },
      "TweetCreateRequestMedia" : {
        "required" : [ "media_ids" ],
        "type" : "object",
        "properties" : {
          "media_ids" : {
            "maxItems" : 4,
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of Media Ids to be attached to a created Tweet",
            "items" : {
              "$ref" : "#/components/schemas/MediaId"
            },
            "x-ballerina-name" : "mediaIds"
          },
          "tagged_user_ids" : {
            "maxItems" : 10,
            "minItems" : 0,
            "type" : "array",
            "description" : "A list of User Ids to be tagged in the media for created Tweet",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "taggedUserIds"
          }
        },
        "additionalProperties" : false,
        "description" : "Media information being attached to created Tweet. This is mutually exclusive from Quote Tweet Id, Poll, and Card URI"
      },
      "Get2UsersIdOwnedListsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "Space" : {
        "required" : [ "id", "state" ],
        "type" : "object",
        "properties" : {
          "topics" : {
            "type" : "array",
            "description" : "The topics of a Space, as selected by its creator",
            "items" : {
              "$ref" : "#/components/schemas/SpaceTopics"
            }
          },
          "scheduled_start" : {
            "type" : "string",
            "description" : "A date time stamp for when a Space is scheduled to begin",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "scheduledStart"
          },
          "created_at" : {
            "type" : "string",
            "description" : "Creation time of the Space",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "createdAt"
          },
          "is_ticketed" : {
            "type" : "boolean",
            "description" : "Denotes if the Space is a ticketed Space",
            "example" : false,
            "x-ballerina-name" : "isTicketed"
          },
          "title" : {
            "type" : "string",
            "description" : "The title of the Space",
            "example" : "Spaces are Awesome"
          },
          "invited_user_ids" : {
            "type" : "array",
            "description" : "An array of user ids for people who were invited to a Space",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "invitedUserIds"
          },
          "speaker_ids" : {
            "type" : "array",
            "description" : "An array of user ids for people who were speakers in a Space",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "speakerIds"
          },
          "participant_count" : {
            "type" : "integer",
            "description" : "The number of participants in a Space",
            "format" : "int32",
            "example" : 10,
            "x-ballerina-name" : "participantCount"
          },
          "updated_at" : {
            "type" : "string",
            "description" : "When the Space was last updated",
            "format" : "date-time",
            "x-ballerina-name" : "updatedAt"
          },
          "subscriber_count" : {
            "type" : "integer",
            "description" : "The number of people who have either purchased a ticket or set a reminder for this Space",
            "format" : "int32",
            "example" : 10,
            "x-ballerina-name" : "subscriberCount"
          },
          "creator_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "creatorId"
          },
          "started_at" : {
            "type" : "string",
            "description" : "When the Space was started as a date string",
            "format" : "date-time",
            "x-ballerina-name" : "startedAt"
          },
          "host_ids" : {
            "type" : "array",
            "description" : "The user ids for the hosts of the Space",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "hostIds"
          },
          "id" : {
            "$ref" : "#/components/schemas/SpaceId"
          },
          "state" : {
            "type" : "string",
            "description" : "The current state of the Space",
            "example" : "live",
            "enum" : [ "live", "scheduled", "ended" ]
          },
          "lang" : {
            "type" : "string",
            "description" : "The language of the Space",
            "example" : "en"
          },
          "ended_at" : {
            "type" : "string",
            "description" : "End time of the Space",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "endedAt"
          }
        },
        "description" : ""
      },
      "UsersRetweetsCreateRequest" : {
        "required" : [ "tweet_id" ],
        "type" : "object",
        "properties" : {
          "tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "tweetId"
          }
        },
        "additionalProperties" : false
      },
      "DeleteRulesRequest" : {
        "required" : [ "delete" ],
        "type" : "object",
        "properties" : {
          "delete" : {
            "$ref" : "#/components/schemas/DeleteRulesRequestDelete"
          }
        },
        "description" : "A response from deleting user-specified stream filtering rules"
      },
      "UserComplianceSchemaUser" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/UserId"
          }
        }
      },
      "AddRulesRequest" : {
        "required" : [ "add" ],
        "type" : "object",
        "properties" : {
          "add" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RuleNoId"
            }
          }
        },
        "description" : "A request to add a user-specified stream filtering rule"
      },
      "UrlEntityDm" : {
        "description" : "Represent the portion of text recognized as a URL, and its start and end position within the text",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
        }, {
          "$ref" : "#/components/schemas/UrlFields"
        } ]
      },
      "ListPinnedResponseData" : {
        "type" : "object",
        "properties" : {
          "pinned" : {
            "type" : "boolean"
          }
        }
      },
      "ContextAnnotation" : {
        "required" : [ "domain", "entity" ],
        "type" : "object",
        "properties" : {
          "domain" : {
            "$ref" : "#/components/schemas/ContextAnnotationDomainFields"
          },
          "entity" : {
            "$ref" : "#/components/schemas/ContextAnnotationEntityFields"
          }
        },
        "description" : "Annotation inferred from the Tweet text"
      },
      "Get2ListsIdMembersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2ListsIdMembersResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersFollowingCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UsersFollowingCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsersIdFollowersResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "UrlEntity" : {
        "description" : "Represent the portion of text recognized as a URL, and its start and end position within the text",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
        }, {
          "$ref" : "#/components/schemas/UrlFields"
        } ]
      },
      "InvalidRequestProblemAllOf2" : {
        "type" : "object",
        "properties" : {
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/InvalidRequestProblemErrors"
            }
          }
        }
      },
      "MentionFields" : {
        "required" : [ "username" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "username" : {
            "$ref" : "#/components/schemas/UserName"
          }
        },
        "description" : "Represent the portion of text recognized as a User mention, and its start and end position within the text"
      },
      "CreateDmConversationRequest" : {
        "required" : [ "conversation_type", "message", "participant_ids" ],
        "type" : "object",
        "properties" : {
          "conversation_type" : {
            "type" : "string",
            "description" : "The conversation type that is being created",
            "enum" : [ "Group" ],
            "x-ballerina-name" : "conversationType"
          },
          "participant_ids" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DmParticipants"
            } ],
            "x-ballerina-name" : "participantIds"
          },
          "message" : {
            "$ref" : "#/components/schemas/CreateMessageRequest"
          }
        },
        "additionalProperties" : false
      },
      "DisallowedResourceProblem" : {
        "description" : "A problem that indicates that the resource requested violates the precepts of this API",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/DisallowedResourceProblemAllOf2"
        } ]
      },
      "ResourceNotFoundProblemAllOf2" : {
        "required" : [ "parameter", "resource_id", "resource_type", "value" ],
        "type" : "object",
        "properties" : {
          "parameter" : {
            "minLength" : 1,
            "type" : "string"
          },
          "resource_type" : {
            "type" : "string",
            "enum" : [ "user", "tweet", "media", "list", "space" ],
            "x-ballerina-name" : "resourceType"
          },
          "resource_id" : {
            "type" : "string",
            "x-ballerina-name" : "resourceId"
          },
          "value" : {
            "type" : "string",
            "description" : "Value will match the schema of the field"
          }
        }
      },
      "TweetPublicMetrics" : {
        "required" : [ "bookmark_count", "impression_count", "like_count", "reply_count", "retweet_count" ],
        "type" : "object",
        "properties" : {
          "like_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been liked",
            "x-ballerina-name" : "likeCount"
          },
          "bookmark_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been bookmarked",
            "format" : "int32",
            "x-ballerina-name" : "bookmarkCount"
          },
          "reply_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been replied to",
            "x-ballerina-name" : "replyCount"
          },
          "quote_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been quoted",
            "x-ballerina-name" : "quoteCount"
          },
          "retweet_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been Retweeted",
            "x-ballerina-name" : "retweetCount"
          },
          "impression_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been viewed",
            "format" : "int32",
            "x-ballerina-name" : "impressionCount"
          }
        },
        "description" : "Engagement metrics for the Tweet at the time of the request"
      },
      "Get2SpacesIdBuyersResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "ListUpdateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ListUpdateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2TweetsSearchStreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ContextAnnotationEntityFields" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the context annotation entity"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the context annotation entity"
          },
          "id" : {
            "pattern" : "^[0-9]{1,19}$",
            "type" : "string",
            "description" : "The unique id for a context annotation entity"
          }
        },
        "description" : "Represents the data for the context annotation entity"
      },
      "Get2UsersIdFollowedListsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "TweetGeo" : {
        "type" : "object",
        "properties" : {
          "coordinates" : {
            "$ref" : "#/components/schemas/Point"
          },
          "place_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PlaceId"
            } ],
            "x-ballerina-name" : "placeId"
          }
        },
        "description" : "The location tagged on the Tweet, if the user provided one"
      },
      "ResourceUnavailableProblem" : {
        "description" : "A problem that indicates a particular Tweet, User, etc. is not available to you",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/ResourceUnavailableProblemAllOf2"
        } ]
      },
      "ResourceNotFoundProblem" : {
        "description" : "A problem that indicates that a given Tweet, User, etc. does not exist",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/ResourceNotFoundProblemAllOf2"
        } ]
      },
      "Get2TweetsIdLikingUsersResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "DmEventAttachments" : {
        "type" : "object",
        "properties" : {
          "media_keys" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of Media Keys for each one of the media attachments (if media are attached)",
            "items" : {
              "$ref" : "#/components/schemas/MediaKey"
            },
            "x-ballerina-name" : "mediaKeys"
          },
          "card_ids" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of card IDs (if cards are attached)",
            "items" : {
              "type" : "string"
            },
            "x-ballerina-name" : "cardIds"
          }
        },
        "description" : "Specifies the type of attachments (if any) present in this DM"
      },
      "Get2UsersSearchResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersSearchResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersFollowingCreateResponseData" : {
        "type" : "object",
        "properties" : {
          "following" : {
            "type" : "boolean"
          },
          "pending_follow" : {
            "type" : "boolean",
            "x-ballerina-name" : "pendingFollow"
          }
        }
      },
      "ClientForbiddenProblem" : {
        "description" : "A problem that indicates your client is forbidden from making this request",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/ClientForbiddenProblemAllOf2"
        } ]
      },
      "Get2UsersByUsernameUsernameResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/User"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ListCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "CreateDmEventResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/CreateDmEventResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UserTakedownComplianceSchemaUser" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/UserId"
          }
        }
      },
      "DmEventId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "Unique identifier of a DM Event",
        "example" : "1146654567674912769"
      },
      "Get2TweetsFirehoseStreamLangEnResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "AnimatedGifAllOf2" : {
        "type" : "object",
        "properties" : {
          "preview_image_url" : {
            "type" : "string",
            "format" : "uri",
            "x-ballerina-name" : "previewImageUrl"
          },
          "variants" : {
            "$ref" : "#/components/schemas/Variants"
          }
        }
      },
      "FieldUnauthorizedProblem" : {
        "description" : "A problem that indicates that you are not allowed to see a particular field on a Tweet, User, etc",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/FieldUnauthorizedProblemAllOf2"
        } ]
      },
      "DmEvent" : {
        "required" : [ "event_type", "id" ],
        "type" : "object",
        "properties" : {
          "attachments" : {
            "$ref" : "#/components/schemas/DmEventAttachments"
          },
          "hashtags" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HashtagEntity"
            }
          },
          "referenced_tweets" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of Posts this DM refers to",
            "items" : {
              "$ref" : "#/components/schemas/DmEventReferencedTweets"
            },
            "x-ballerina-name" : "referencedTweets"
          },
          "participant_ids" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of participants for a ParticipantsJoin or ParticipantsLeave event_type",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "participantIds"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "createdAt"
          },
          "sender_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "senderId"
          },
          "cashtags" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CashtagEntity"
            }
          },
          "urls" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UrlEntityDm"
            }
          },
          "dm_conversation_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DmConversationId"
            } ],
            "x-ballerina-name" : "dmConversationId"
          },
          "event_type" : {
            "type" : "string",
            "example" : "MessageCreate",
            "x-ballerina-name" : "eventType"
          },
          "mentions" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MentionEntity"
            }
          },
          "id" : {
            "$ref" : "#/components/schemas/DmEventId"
          },
          "text" : {
            "type" : "string"
          }
        }
      },
      "FilteredStreamingTweetResponseMatchingRules" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/RuleId"
          },
          "tag" : {
            "$ref" : "#/components/schemas/RuleTag"
          }
        }
      },
      "LikeComplianceSchema" : {
        "required" : [ "delete" ],
        "type" : "object",
        "properties" : {
          "delete" : {
            "$ref" : "#/components/schemas/UnlikeComplianceSchema"
          }
        }
      },
      "UsersRetweetsCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UsersRetweetsCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2TweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "AllProjectClientApps" : {
        "type" : "array",
        "description" : "Client App Rule Counts for all applications in the project",
        "items" : {
          "$ref" : "#/components/schemas/AppRulesCount"
        }
      },
      "DisallowedResourceProblemAllOf2" : {
        "required" : [ "resource_id", "resource_type", "section" ],
        "type" : "object",
        "properties" : {
          "resource_type" : {
            "type" : "string",
            "enum" : [ "user", "tweet", "media", "list", "space" ],
            "x-ballerina-name" : "resourceType"
          },
          "resource_id" : {
            "type" : "string",
            "x-ballerina-name" : "resourceId"
          },
          "section" : {
            "type" : "string",
            "enum" : [ "data", "includes" ]
          }
        }
      },
      "Get2ListsIdFollowersResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "Get2TweetsSearchStreamRulesCountsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/RulesCount"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersLikesDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UsersLikesDeleteResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "AnnotationsAllOf2" : {
        "type" : "object",
        "properties" : {
          "probability" : {
            "maximum" : 1,
            "minimum" : 0,
            "type" : "number",
            "description" : "Confidence factor for annotation type",
            "format" : "double"
          },
          "normalized_text" : {
            "type" : "string",
            "description" : "Text used to determine annotation",
            "example" : "Barack Obama",
            "x-ballerina-name" : "normalizedText"
          },
          "type" : {
            "type" : "string",
            "description" : "Annotation type",
            "example" : "Person"
          }
        },
        "description" : "Represents the data for the annotation"
      },
      "Get2ListsIdFollowersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2ListsIdFollowersResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Expansions" : {
        "type" : "object",
        "properties" : {
          "places" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Place"
            }
          },
          "topics" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Topic"
            }
          },
          "polls" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Poll"
            }
          },
          "media" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Media"
            }
          },
          "tweets" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "users" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          }
        }
      },
      "LikesComplianceStreamResponseLikesComplianceStreamResponseOneOf12" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ResourceUnauthorizedProblem" : {
        "description" : "A problem that indicates you are not allowed to see a particular Tweet, User, etc",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/ResourceUnauthorizedProblemAllOf2"
        } ]
      },
      "Get2TweetsFirehoseStreamLangPtResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetDeleteResponseData" : {
        "required" : [ "deleted" ],
        "type" : "object",
        "properties" : {
          "deleted" : {
            "type" : "boolean"
          }
        }
      },
      "UserDeleteComplianceSchema" : {
        "required" : [ "user_delete" ],
        "type" : "object",
        "properties" : {
          "user_delete" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserComplianceSchema"
            } ],
            "x-ballerina-name" : "userDelete"
          }
        }
      },
      "UserEntities" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "$ref" : "#/components/schemas/FullTextEntities"
          },
          "url" : {
            "$ref" : "#/components/schemas/UserEntitiesUrl"
          }
        },
        "description" : "A list of metadata found in the User's profile description"
      },
      "UserIdMatchesAuthenticatedUser" : {
        "type" : "string",
        "description" : "Unique identifier of this User. The value must be the same as the authenticated user",
        "example" : "2244994945"
      },
      "TweetAttachments" : {
        "type" : "object",
        "properties" : {
          "media_source_tweet_id" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of Posts the media on this Tweet was originally posted in. For example, if the media on a tweet is re-used in another Tweet, this refers to the original, source Tweet.",
            "items" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "x-ballerina-name" : "mediaSourceTweetId"
          },
          "media_keys" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of Media Keys for each one of the media attachments (if media are attached)",
            "items" : {
              "$ref" : "#/components/schemas/MediaKey"
            },
            "x-ballerina-name" : "mediaKeys"
          },
          "poll_ids" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of poll IDs (if polls are attached)",
            "items" : {
              "$ref" : "#/components/schemas/PollId"
            },
            "x-ballerina-name" : "pollIds"
          }
        },
        "description" : "Specifies the type of attachments (if any) present in this Tweet"
      },
      "Get2TweetsIdQuoteTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2TweetsIdQuoteTweetsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UserComplianceStreamResponseUserComplianceStreamResponseOneOf12" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2TweetsCountsAllResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SearchCount"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2TweetsCountsAllResponseMeta"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "VideoPromotedMetrics" : {
        "type" : "object",
        "properties" : {
          "playback_100_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 100% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback100Count"
          },
          "playback_75_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 75% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback75Count"
          },
          "playback_25_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 25% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback25Count"
          },
          "playback_0_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 0% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback0Count"
          },
          "view_count" : {
            "type" : "integer",
            "description" : "Number of times this video has been viewed",
            "format" : "int32",
            "x-ballerina-name" : "viewCount"
          },
          "playback_50_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 50% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback50Count"
          }
        },
        "description" : "Promoted nonpublic engagement metrics for the Media at the time of the request"
      },
      "Aggregate" : {
        "type" : "integer",
        "description" : "The sum of results returned in this response",
        "format" : "int32"
      },
      "ComplianceJobName" : {
        "maxLength" : 64,
        "type" : "string",
        "description" : "User-provided name for a compliance job",
        "example" : "my-job"
      },
      "Get2DmConversationsWithParticipantIdDmEventsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DmEvent"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsWithParticipantIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetDropComplianceSchema" : {
        "required" : [ "drop" ],
        "type" : "object",
        "properties" : {
          "drop" : {
            "$ref" : "#/components/schemas/TweetComplianceSchema"
          }
        }
      },
      "Get2UsersIdFollowedListsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/List"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdFollowedListsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "private" : {
            "type" : "boolean"
          },
          "name" : {
            "maxLength" : 25,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "VideoOrganicMetrics" : {
        "type" : "object",
        "properties" : {
          "playback_100_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 100% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback100Count"
          },
          "playback_75_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 75% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback75Count"
          },
          "playback_25_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 25% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback25Count"
          },
          "playback_0_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 0% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback0Count"
          },
          "view_count" : {
            "type" : "integer",
            "description" : "Number of times this video has been viewed",
            "format" : "int32",
            "x-ballerina-name" : "viewCount"
          },
          "playback_50_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 50% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback50Count"
          }
        },
        "description" : "Organic nonpublic engagement metrics for the Media at the time of the request"
      },
      "VideoAllOf2" : {
        "type" : "object",
        "properties" : {
          "duration_ms" : {
            "type" : "integer",
            "x-ballerina-name" : "durationMs"
          },
          "preview_image_url" : {
            "type" : "string",
            "format" : "uri",
            "x-ballerina-name" : "previewImageUrl"
          },
          "promoted_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VideoPromotedMetrics"
            } ],
            "x-ballerina-name" : "promotedMetrics"
          },
          "public_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VideoPublicMetrics"
            } ],
            "x-ballerina-name" : "publicMetrics"
          },
          "non_public_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VideoNonPublicMetrics"
            } ],
            "x-ballerina-name" : "nonPublicMetrics"
          },
          "variants" : {
            "$ref" : "#/components/schemas/Variants"
          },
          "organic_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/VideoOrganicMetrics"
            } ],
            "x-ballerina-name" : "organicMetrics"
          }
        }
      },
      "Place" : {
        "required" : [ "full_name", "id" ],
        "type" : "object",
        "properties" : {
          "geo" : {
            "$ref" : "#/components/schemas/Geo"
          },
          "contained_within" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlaceId"
            },
            "x-ballerina-name" : "containedWithin"
          },
          "country" : {
            "type" : "string",
            "description" : "The full name of the county in which this place exists",
            "example" : "United States"
          },
          "country_code" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CountryCode"
            } ],
            "x-ballerina-name" : "countryCode"
          },
          "full_name" : {
            "type" : "string",
            "description" : "The full name of this place",
            "example" : "Lakewood, CO",
            "x-ballerina-name" : "fullName"
          },
          "place_type" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PlaceType"
            } ],
            "x-ballerina-name" : "placeType"
          },
          "name" : {
            "type" : "string",
            "description" : "The human readable name of this place",
            "example" : "Lakewood"
          },
          "id" : {
            "$ref" : "#/components/schemas/PlaceId"
          }
        }
      },
      "FullTextEntitiesAnnotations" : {
        "description" : "Annotation for entities based on the Tweet text",
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityIndicesInclusiveInclusive"
        }, {
          "$ref" : "#/components/schemas/AnnotationsAllOf2"
        } ]
      },
      "AnimatedGif" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Media"
        }, {
          "$ref" : "#/components/schemas/AnimatedGifAllOf2"
        } ]
      },
      "Get2LikesSample10StreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Like"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UserComplianceStreamResponse" : {
        "description" : "User compliance stream events",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/UserComplianceStreamResponseOneOf1"
        }, {
          "$ref" : "#/components/schemas/UserComplianceStreamResponseUserComplianceStreamResponseOneOf12"
        } ]
      },
      "UserUnprotectComplianceSchema" : {
        "required" : [ "user_unprotect" ],
        "type" : "object",
        "properties" : {
          "user_unprotect" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserComplianceSchema"
            } ],
            "x-ballerina-name" : "userUnprotect"
          }
        }
      },
      "PlaceType" : {
        "type" : "string",
        "example" : "city",
        "enum" : [ "poi", "neighborhood", "city", "admin", "country", "unknown" ]
      },
      "UsersFollowingDeleteResponseData" : {
        "type" : "object",
        "properties" : {
          "following" : {
            "type" : "boolean"
          }
        }
      },
      "Start" : {
        "type" : "string",
        "description" : "The start time of the bucket",
        "format" : "date-time"
      },
      "Tweet" : {
        "type" : "object",
        "properties" : {
          "attachments" : {
            "$ref" : "#/components/schemas/TweetAttachments"
          },
          "created_at" : {
            "type" : "string",
            "description" : "Creation time of the Tweet",
            "format" : "date-time",
            "example" : "2021-01-06T18:40:40Z",
            "x-ballerina-name" : "createdAt"
          },
          "source" : {
            "type" : "string",
            "description" : "This is deprecated"
          },
          "withheld" : {
            "$ref" : "#/components/schemas/TweetWithheld"
          },
          "edit_controls" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetEditControls"
            } ],
            "x-ballerina-name" : "editControls"
          },
          "geo" : {
            "$ref" : "#/components/schemas/TweetGeo"
          },
          "conversation_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "conversationId"
          },
          "edit_history_tweet_ids" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of Tweet Ids in this Tweet chain",
            "items" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "x-ballerina-name" : "editHistoryTweetIds"
          },
          "in_reply_to_user_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "inReplyToUserId"
          },
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "text" : {
            "$ref" : "#/components/schemas/TweetText"
          },
          "lang" : {
            "type" : "string",
            "description" : "Language of the Tweet, if detected by X. Returned as a BCP47 language tag",
            "example" : "en"
          },
          "reply_settings" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ReplySettingsWithVerifiedUsers"
            } ],
            "x-ballerina-name" : "replySettings"
          },
          "referenced_tweets" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "A list of Posts this Tweet refers to. For example, if the parent Tweet is a Retweet, a Quoted Tweet or a Reply, it will include the related Tweet referenced to by its parent",
            "items" : {
              "$ref" : "#/components/schemas/TweetReferencedTweets"
            },
            "x-ballerina-name" : "referencedTweets"
          },
          "possibly_sensitive" : {
            "type" : "boolean",
            "description" : "Indicates if this Tweet contains URLs marked as sensitive, for example content suitable for mature audiences",
            "example" : false,
            "x-ballerina-name" : "possiblySensitive"
          },
          "public_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetPublicMetrics"
            } ],
            "x-ballerina-name" : "publicMetrics"
          },
          "non_public_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetNonPublicMetrics"
            } ],
            "x-ballerina-name" : "nonPublicMetrics"
          },
          "note_tweet" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetNoteTweet"
            } ],
            "x-ballerina-name" : "noteTweet"
          },
          "context_annotations" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContextAnnotation"
            },
            "x-ballerina-name" : "contextAnnotations"
          },
          "entities" : {
            "$ref" : "#/components/schemas/FullTextEntities"
          },
          "promoted_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetPromotedMetrics"
            } ],
            "x-ballerina-name" : "promotedMetrics"
          },
          "scopes" : {
            "$ref" : "#/components/schemas/TweetScopes"
          },
          "author_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "authorId"
          },
          "organic_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetOrganicMetrics"
            } ],
            "x-ballerina-name" : "organicMetrics"
          },
          "username" : {
            "$ref" : "#/components/schemas/UserName"
          }
        },
        "example" : {
          "author_id" : "2244994945",
          "created_at" : "Wed Jan 06 18:40:40 +0000 2021",
          "id" : "1346889436626259968",
          "text" : "Learn how to use the user Tweet timeline and user mention timeline endpoints in the X API v2 to explore Tweet\\u2026 https:\\/\\/t.co\\/56a0vZUx7i",
          "username" : "XDevelopers"
        }
      },
      "RulesRequestSummaryRulesRequestSummaryOneOf12" : {
        "required" : [ "deleted", "not_deleted" ],
        "type" : "object",
        "properties" : {
          "deleted" : {
            "type" : "integer",
            "description" : "Number of user-specified stream filtering rules that were deleted",
            "format" : "int32"
          },
          "not_deleted" : {
            "type" : "integer",
            "description" : "Number of user-specified stream filtering rules that were not deleted",
            "format" : "int32",
            "x-ballerina-name" : "notDeleted"
          }
        }
      },
      "ComplianceJobType" : {
        "type" : "string",
        "description" : "Type of compliance job to list",
        "enum" : [ "tweets", "users" ]
      },
      "Photo" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Media"
        }, {
          "$ref" : "#/components/schemas/PhotoAllOf2"
        } ]
      },
      "RulesCapProblem" : {
        "description" : "You have exceeded the maximum number of rules",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "GenericProblem" : {
        "description" : "A generic problem with no additional information beyond that provided by the HTTP status code",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "Get2ListsIdTweetsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "Get2TweetsSearchRecentResponseMeta" : {
        "type" : "object",
        "properties" : {
          "oldest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OldestId"
            } ],
            "x-ballerina-name" : "oldestId"
          },
          "newest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NewestId"
            } ],
            "x-ballerina-name" : "newestId"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "PaginationToken32" : {
        "minLength" : 16,
        "type" : "string",
        "description" : "A base32 pagination token"
      },
      "Get2TweetsSearchAllResponseMeta" : {
        "type" : "object",
        "properties" : {
          "oldest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OldestId"
            } ],
            "x-ballerina-name" : "oldestId"
          },
          "newest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NewestId"
            } ],
            "x-ballerina-name" : "newestId"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "ClientAppId" : {
        "maxLength" : 19,
        "minLength" : 1,
        "type" : "string",
        "description" : "The ID of the client application"
      },
      "DeleteDmResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DeleteDmResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "DmParticipants" : {
        "maxItems" : 49,
        "minItems" : 2,
        "type" : "array",
        "description" : "Participants for the DM Conversation",
        "items" : {
          "$ref" : "#/components/schemas/UserId"
        }
      },
      "TweetCreateRequestPoll" : {
        "required" : [ "duration_minutes", "options" ],
        "type" : "object",
        "properties" : {
          "duration_minutes" : {
            "maximum" : 10080,
            "minimum" : 5,
            "type" : "integer",
            "description" : "Duration of the poll in minutes",
            "format" : "int32",
            "x-ballerina-name" : "durationMinutes"
          },
          "options" : {
            "maxItems" : 4,
            "minItems" : 2,
            "type" : "array",
            "items" : {
              "maxLength" : 25,
              "minLength" : 1,
              "type" : "string",
              "description" : "The text of a poll choice."
            }
          },
          "reply_settings" : {
            "type" : "string",
            "description" : "Settings to indicate who can reply to the Tweet",
            "enum" : [ "following", "mentionedUsers" ],
            "x-ballerina-name" : "replySettings"
          }
        },
        "additionalProperties" : false,
        "description" : "Poll options for a Tweet with a poll. This is mutually exclusive from Media, Quote Tweet Id, and Card URI"
      },
      "LikeId" : {
        "pattern" : "^[A-Za-z0-9_]{1,40}$",
        "type" : "string",
        "description" : "The unique identifier of this Like",
        "example" : "8ba4f34e6235d905a46bac021d98e923"
      },
      "UserComplianceStreamResponseOneOf1" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UserComplianceData"
          }
        },
        "description" : "User compliance event"
      },
      "HashtagFields" : {
        "required" : [ "tag" ],
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string",
            "description" : "The text of the Hashtag",
            "example" : "MondayMotivation"
          }
        },
        "description" : "Represent the portion of text recognized as a Hashtag, and its start and end position within the text"
      },
      "List" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "private" : {
            "type" : "boolean"
          },
          "owner_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "ownerId"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of this List"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "createdAt"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "$ref" : "#/components/schemas/ListId"
          },
          "member_count" : {
            "type" : "integer",
            "x-ballerina-name" : "memberCount"
          },
          "follower_count" : {
            "type" : "integer",
            "x-ballerina-name" : "followerCount"
          }
        },
        "description" : "A X List is a curated group of accounts"
      },
      "InvalidRequestProblem" : {
        "description" : "A problem that indicates this request is invalid",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/InvalidRequestProblemAllOf2"
        } ]
      },
      "TweetWithheldComplianceSchema" : {
        "required" : [ "withheld" ],
        "type" : "object",
        "properties" : {
          "withheld" : {
            "$ref" : "#/components/schemas/TweetTakedownComplianceSchema"
          }
        }
      },
      "DownloadUrl" : {
        "type" : "string",
        "description" : "URL from which the user will retrieve their compliance results",
        "format" : "uri"
      },
      "Get2UsersIdMutingResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "RuleNoId" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "tag" : {
            "$ref" : "#/components/schemas/RuleTag"
          },
          "value" : {
            "$ref" : "#/components/schemas/RuleValue"
          }
        },
        "description" : "A user-provided stream filtering rule"
      },
      "Get2UsersIdPinnedListsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "VideoNonPublicMetrics" : {
        "type" : "object",
        "properties" : {
          "playback_100_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 100% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback100Count"
          },
          "playback_75_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 75% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback75Count"
          },
          "playback_25_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 25% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback25Count"
          },
          "playback_0_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 0% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback0Count"
          },
          "playback_50_count" : {
            "type" : "integer",
            "description" : "Number of users who made it through 50% of the video",
            "format" : "int32",
            "x-ballerina-name" : "playback50Count"
          }
        },
        "description" : "Nonpublic engagement metrics for the Media at the time of the request"
      },
      "UserProfileModificationObjectSchema" : {
        "required" : [ "event_at", "new_value", "profile_field", "user" ],
        "type" : "object",
        "properties" : {
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserProfileModificationObjectSchemaUser"
          },
          "new_value" : {
            "type" : "string",
            "x-ballerina-name" : "newValue"
          },
          "profile_field" : {
            "type" : "string",
            "x-ballerina-name" : "profileField"
          }
        }
      },
      "Get2TweetsSampleStreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListUpdateResponseData" : {
        "type" : "object",
        "properties" : {
          "updated" : {
            "type" : "boolean"
          }
        }
      },
      "Get2UsersByResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListFollowedResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ListFollowedResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "OperationalDisconnectProblemAllOf2" : {
        "type" : "object",
        "properties" : {
          "disconnect_type" : {
            "type" : "string",
            "enum" : [ "OperationalDisconnect", "UpstreamOperationalDisconnect", "ForceDisconnect", "UpstreamUncleanDisconnect", "SlowReader", "InternalError", "ClientApplicationStateDegraded", "InvalidRules" ],
            "x-ballerina-name" : "disconnectType"
          }
        }
      },
      "UserPublicMetrics" : {
        "required" : [ "followers_count", "following_count", "listed_count", "tweet_count" ],
        "type" : "object",
        "properties" : {
          "tweet_count" : {
            "type" : "integer",
            "description" : "The number of Posts (including Retweets) posted by this User",
            "x-ballerina-name" : "tweetCount"
          },
          "like_count" : {
            "type" : "integer",
            "description" : "The number of likes created by this User",
            "x-ballerina-name" : "likeCount"
          },
          "following_count" : {
            "type" : "integer",
            "description" : "Number of Users this User is following",
            "x-ballerina-name" : "followingCount"
          },
          "listed_count" : {
            "type" : "integer",
            "description" : "The number of lists that include this User",
            "x-ballerina-name" : "listedCount"
          },
          "followers_count" : {
            "type" : "integer",
            "description" : "Number of Users who are following this User",
            "x-ballerina-name" : "followersCount"
          }
        },
        "description" : "A list of metrics for this User"
      },
      "Get2TweetsCountsRecentResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SearchCount"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2TweetsCountsRecentResponseMeta"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetCreateRequestReply" : {
        "required" : [ "in_reply_to_tweet_id" ],
        "type" : "object",
        "properties" : {
          "exclude_reply_user_ids" : {
            "type" : "array",
            "description" : "A list of User Ids to be excluded from the reply Tweet",
            "items" : {
              "$ref" : "#/components/schemas/UserId"
            },
            "x-ballerina-name" : "excludeReplyUserIds"
          },
          "in_reply_to_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "inReplyToTweetId"
          }
        },
        "additionalProperties" : false,
        "description" : "Tweet information of the Tweet being replied to"
      },
      "Get2SpacesByCreatorIdsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "MediaId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "The unique identifier of this Media",
        "example" : "1146654567674912769"
      },
      "TweetEditControls" : {
        "required" : [ "editable_until", "edits_remaining", "is_edit_eligible" ],
        "type" : "object",
        "properties" : {
          "is_edit_eligible" : {
            "type" : "boolean",
            "description" : "Indicates if this Tweet is eligible to be edited",
            "example" : false,
            "x-ballerina-name" : "isEditEligible"
          },
          "edits_remaining" : {
            "type" : "integer",
            "description" : "Number of times this Tweet can be edited",
            "x-ballerina-name" : "editsRemaining"
          },
          "editable_until" : {
            "type" : "string",
            "description" : "Time when Tweet is no longer editable",
            "format" : "date-time",
            "example" : "2021-01-06T18:40:40Z",
            "x-ballerina-name" : "editableUntil"
          }
        }
      },
      "Video" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Media"
        }, {
          "$ref" : "#/components/schemas/VideoAllOf2"
        } ]
      },
      "TweetPromotedMetrics" : {
        "type" : "object",
        "properties" : {
          "like_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been liked",
            "format" : "int32",
            "x-ballerina-name" : "likeCount"
          },
          "reply_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been replied to",
            "format" : "int32",
            "x-ballerina-name" : "replyCount"
          },
          "retweet_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been Retweeted",
            "format" : "int32",
            "x-ballerina-name" : "retweetCount"
          },
          "impression_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been viewed",
            "format" : "int32",
            "x-ballerina-name" : "impressionCount"
          }
        },
        "description" : "Promoted nonpublic engagement metrics for the Tweet at the time of the request"
      },
      "Get2UsersIdFollowingResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdFollowingResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "End" : {
        "type" : "string",
        "description" : "The end time of the bucket",
        "format" : "date-time"
      },
      "Get2TweetsIdRetweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2TweetsIdRetweetsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Problem" : {
        "required" : [ "title", "type" ],
        "type" : "object",
        "properties" : {
          "detail" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "status" : {
            "type" : "integer"
          }
        },
        "description" : "An HTTP Problem Details object, as defined in IETF RFC 7807 (https://tools.ietf.org/html/rfc7807)",
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "about:blank" : "#/components/schemas/GenericProblem",
            "https://api.twitter.com/2/problems/client-disconnected" : "#/components/schemas/ClientDisconnectedProblem",
            "https://api.twitter.com/2/problems/client-forbidden" : "#/components/schemas/ClientForbiddenProblem",
            "https://api.twitter.com/2/problems/conflict" : "#/components/schemas/ConflictProblem",
            "https://api.twitter.com/2/problems/disallowed-resource" : "#/components/schemas/DisallowedResourceProblem",
            "https://api.twitter.com/2/problems/duplicate-rules" : "#/components/schemas/DuplicateRuleProblem",
            "https://api.twitter.com/2/problems/invalid-request" : "#/components/schemas/InvalidRequestProblem",
            "https://api.twitter.com/2/problems/invalid-rules" : "#/components/schemas/InvalidRuleProblem",
            "https://api.twitter.com/2/problems/noncompliant-rules" : "#/components/schemas/NonCompliantRulesProblem",
            "https://api.twitter.com/2/problems/not-authorized-for-field" : "#/components/schemas/FieldUnauthorizedProblem",
            "https://api.twitter.com/2/problems/not-authorized-for-resource" : "#/components/schemas/ResourceUnauthorizedProblem",
            "https://api.twitter.com/2/problems/oauth1-permissions" : "#/components/schemas/Oauth1PermissionsProblem",
            "https://api.twitter.com/2/problems/operational-disconnect" : "#/components/schemas/OperationalDisconnectProblem",
            "https://api.twitter.com/2/problems/resource-not-found" : "#/components/schemas/ResourceNotFoundProblem",
            "https://api.twitter.com/2/problems/resource-unavailable" : "#/components/schemas/ResourceUnavailableProblem",
            "https://api.twitter.com/2/problems/rule-cap" : "#/components/schemas/RulesCapProblem",
            "https://api.twitter.com/2/problems/streaming-connection" : "#/components/schemas/ConnectionExceptionProblem",
            "https://api.twitter.com/2/problems/unsupported-authentication" : "#/components/schemas/UnsupportedAuthenticationProblem",
            "https://api.twitter.com/2/problems/usage-capped" : "#/components/schemas/UsageCapExceededProblem"
          }
        }
      },
      "RulesCount" : {
        "type" : "object",
        "properties" : {
          "cap_per_project" : {
            "type" : "integer",
            "description" : "Cap of number of rules allowed per project",
            "format" : "int32",
            "x-ballerina-name" : "capPerProject"
          },
          "all_project_client_apps" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AllProjectClientApps"
            } ],
            "x-ballerina-name" : "allProjectClientApps"
          },
          "project_rules_count" : {
            "type" : "integer",
            "description" : "Number of rules for project",
            "format" : "int32",
            "x-ballerina-name" : "projectRulesCount"
          },
          "cap_per_client_app" : {
            "type" : "integer",
            "description" : "Cap of number of rules allowed per client application",
            "format" : "int32",
            "x-ballerina-name" : "capPerClientApp"
          },
          "client_app_rules_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/AppRulesCount"
            } ],
            "x-ballerina-name" : "clientAppRulesCount"
          }
        },
        "description" : "A count of user-provided stream filtering rules at the application and project levels"
      },
      "Get2UsersIdMentionsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "oldest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OldestId"
            } ],
            "x-ballerina-name" : "oldestId"
          },
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "newest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NewestId"
            } ],
            "x-ballerina-name" : "newestId"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "Get2UsersSearchResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          }
        }
      },
      "MuteUserRequest" : {
        "required" : [ "target_user_id" ],
        "type" : "object",
        "properties" : {
          "target_user_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "targetUserId"
          }
        }
      },
      "ReplySettings" : {
        "pattern" : "^[A-Za-z]{1,12}$",
        "type" : "string",
        "description" : "Shows who can reply a Tweet. Fields returned are everyone, mentioned_users, and following",
        "enum" : [ "everyone", "mentionedUsers", "following", "other" ]
      },
      "TweetNoticeTweet" : {
        "required" : [ "author_id", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "author_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "authorId"
          }
        }
      },
      "UploadUrl" : {
        "type" : "string",
        "description" : "URL to which the user will upload their Tweet or user IDs",
        "format" : "uri"
      },
      "RulesResponseMetadata" : {
        "required" : [ "sent" ],
        "type" : "object",
        "properties" : {
          "summary" : {
            "$ref" : "#/components/schemas/RulesRequestSummary"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "type" : "integer",
            "description" : "Number of Rules in result set",
            "format" : "int32",
            "x-ballerina-name" : "resultCount"
          },
          "sent" : {
            "type" : "string"
          }
        }
      },
      "ConflictProblem" : {
        "description" : "You cannot create a new job if one is already in progress",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "TweetText" : {
        "type" : "string",
        "description" : "The content of the Tweet",
        "example" : "Learn how to use the user Tweet timeline and user mention timeline endpoints in the X API v2 to explore Tweet\\u2026 https:\\/\\/t.co\\/56a0vZUx7i"
      },
      "Get2UsersIdBookmarksResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "UserProfileModificationObjectSchemaUser" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/UserId"
          }
        }
      },
      "ListAddUserRequest" : {
        "required" : [ "user_id" ],
        "type" : "object",
        "properties" : {
          "user_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "userId"
          }
        }
      },
      "AddOrDeleteRulesRequest" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/AddRulesRequest"
        }, {
          "$ref" : "#/components/schemas/DeleteRulesRequest"
        } ]
      },
      "PollOptionLabel" : {
        "maxLength" : 25,
        "minLength" : 1,
        "type" : "string",
        "description" : "The text of a poll choice"
      },
      "TweetHideRequest" : {
        "required" : [ "hidden" ],
        "type" : "object",
        "properties" : {
          "hidden" : {
            "type" : "boolean"
          }
        }
      },
      "RulesLookupResponse" : {
        "required" : [ "meta" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Rule"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/RulesResponseMetadata"
          }
        }
      },
      "BookmarkMutationResponseData" : {
        "type" : "object",
        "properties" : {
          "bookmarked" : {
            "type" : "boolean"
          }
        }
      },
      "ListUnpinResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ListUnpinResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "DuplicateRuleProblemAllOf2" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "UsersLikesCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UsersLikesCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "DmEventReferencedTweets" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }
      },
      "Get2ListsIdMembersResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "TweetReferencedTweets" : {
        "required" : [ "id", "type" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "retweeted", "quoted", "replied_to" ]
          }
        }
      },
      "Get2SpacesResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Space"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "FullTextEntities" : {
        "type" : "object",
        "properties" : {
          "cashtags" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CashtagEntity"
            }
          },
          "urls" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UrlEntity"
            }
          },
          "hashtags" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HashtagEntity"
            }
          },
          "mentions" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MentionEntity"
            }
          },
          "annotations" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FullTextEntitiesAnnotations"
            }
          }
        }
      },
      "EntityIndicesInclusiveExclusive" : {
        "required" : [ "end", "start" ],
        "type" : "object",
        "properties" : {
          "start" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Index (zero-based) at which position this entity starts.  The index is inclusive",
            "example" : 50
          },
          "end" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Index (zero-based) at which position this entity ends.  The index is exclusive",
            "example" : 61
          }
        },
        "description" : "Represent a boundary range (start and end index) for a recognized entity (for example a hashtag or a mention). `start` must be smaller than `end`.  The start index is inclusive, the end index is exclusive"
      },
      "PollOption" : {
        "required" : [ "label", "position", "votes" ],
        "type" : "object",
        "properties" : {
          "votes" : {
            "type" : "integer",
            "description" : "Number of users who voted for this choice"
          },
          "label" : {
            "$ref" : "#/components/schemas/PollOptionLabel"
          },
          "position" : {
            "type" : "integer",
            "description" : "Position of this choice in the poll"
          }
        },
        "description" : "Describes a choice in a Poll object"
      },
      "UserSearchQuery" : {
        "pattern" : "^[A-Za-z0-9_]{1,32}$",
        "type" : "string",
        "description" : "The the search string by which to query for users"
      },
      "UserName" : {
        "pattern" : "^[A-Za-z0-9_]{1,15}$",
        "type" : "string",
        "description" : "The X handle (screen name) of this user"
      },
      "UsersFollowingDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UsersFollowingDeleteResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2ComplianceJobsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ComplianceJob"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2ComplianceJobsResponseMeta"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetComplianceStreamResponseTweetComplianceStreamResponseOneOf12" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ClientAppUsage" : {
        "type" : "object",
        "properties" : {
          "usage_result_count" : {
            "type" : "integer",
            "description" : "The number of results returned",
            "format" : "int32",
            "x-ballerina-name" : "usageResultCount"
          },
          "client_app_id" : {
            "type" : "string",
            "description" : "The unique identifier for this project",
            "format" : "^[0-9]{1,19}$",
            "x-ballerina-name" : "clientAppId"
          },
          "usage" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "The usage value",
            "items" : {
              "$ref" : "#/components/schemas/UsageFields"
            }
          }
        },
        "description" : "Usage per client app"
      },
      "UsersFollowingCreateRequest" : {
        "required" : [ "target_user_id" ],
        "type" : "object",
        "properties" : {
          "target_user_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "targetUserId"
          }
        }
      },
      "CreateDmEventResponseData" : {
        "required" : [ "dm_conversation_id", "dm_event_id" ],
        "type" : "object",
        "properties" : {
          "dm_conversation_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DmConversationId"
            } ],
            "x-ballerina-name" : "dmConversationId"
          },
          "dm_event_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DmEventId"
            } ],
            "x-ballerina-name" : "dmEventId"
          }
        }
      },
      "UsageDailyProjectUsage" : {
        "type" : "object",
        "properties" : {
          "project_id" : {
            "type" : "integer",
            "description" : "The unique identifier for this project",
            "format" : "int32",
            "x-ballerina-name" : "projectId"
          },
          "usage" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "The usage value",
            "items" : {
              "$ref" : "#/components/schemas/UsageFields"
            }
          }
        },
        "description" : "The daily usage breakdown for a project"
      },
      "Get2TrendsByWoeidWoeidResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Trend"
            }
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersLikesDeleteResponseData" : {
        "type" : "object",
        "properties" : {
          "liked" : {
            "type" : "boolean"
          }
        }
      },
      "CreateAttachmentsMessageRequest" : {
        "required" : [ "attachments" ],
        "type" : "object",
        "properties" : {
          "attachments" : {
            "$ref" : "#/components/schemas/DmAttachments"
          },
          "text" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Text of the message"
          }
        }
      },
      "StreamingTweetResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "DeleteDmResponseData" : {
        "type" : "object",
        "properties" : {
          "deleted" : {
            "type" : "boolean"
          }
        }
      },
      "Get2TweetsFirehoseStreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2TweetsIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetWithheld" : {
        "required" : [ "copyright", "country_codes" ],
        "type" : "object",
        "properties" : {
          "copyright" : {
            "type" : "boolean",
            "description" : "Indicates if the content is being withheld for on the basis of copyright infringement"
          },
          "scope" : {
            "type" : "string",
            "description" : "Indicates whether the content being withheld is the `tweet` or a `user`",
            "enum" : [ "tweet", "user" ]
          },
          "country_codes" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Provides a list of countries where this content is not available",
            "items" : {
              "$ref" : "#/components/schemas/CountryCode"
            },
            "x-ballerina-name" : "countryCodes"
          }
        },
        "description" : "Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country)"
      },
      "AppRulesCount" : {
        "type" : "object",
        "properties" : {
          "client_app_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ClientAppId"
            } ],
            "x-ballerina-name" : "clientAppId"
          },
          "rule_count" : {
            "type" : "integer",
            "description" : "Number of rules for client application",
            "format" : "int32",
            "x-ballerina-name" : "ruleCount"
          }
        },
        "description" : "A count of user-provided stream filtering rules at the client application level"
      },
      "UserProtectComplianceSchema" : {
        "required" : [ "user_protect" ],
        "type" : "object",
        "properties" : {
          "user_protect" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserComplianceSchema"
            } ],
            "x-ballerina-name" : "userProtect"
          }
        }
      },
      "StreamingLikeResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Like"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ConnectionExceptionProblemAllOf2" : {
        "type" : "object",
        "properties" : {
          "connection_issue" : {
            "type" : "string",
            "enum" : [ "TooManyConnections", "ProvisioningSubscription", "RuleConfigurationIssue", "RulesInvalidIssue" ],
            "x-ballerina-name" : "connectionIssue"
          }
        }
      },
      "TweetComplianceStreamResponse" : {
        "description" : "Tweet compliance stream events",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TweetComplianceStreamResponseOneOf1"
        }, {
          "$ref" : "#/components/schemas/TweetComplianceStreamResponseTweetComplianceStreamResponseOneOf12"
        } ]
      },
      "Get2SpacesIdBuyersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2SpacesIdBuyersResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UserWithheldComplianceSchema" : {
        "required" : [ "user_withheld" ],
        "type" : "object",
        "properties" : {
          "user_withheld" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserTakedownComplianceSchema"
            } ],
            "x-ballerina-name" : "userWithheld"
          }
        }
      },
      "TweetComplianceSchemaTweet" : {
        "required" : [ "author_id", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "author_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "authorId"
          }
        }
      },
      "DmMediaAttachment" : {
        "required" : [ "media_id" ],
        "type" : "object",
        "properties" : {
          "media_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaId"
            } ],
            "x-ballerina-name" : "mediaId"
          }
        }
      },
      "Get2UsersIdBlockingResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdBlockingResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetNoteTweet" : {
        "type" : "object",
        "properties" : {
          "entities" : {
            "$ref" : "#/components/schemas/TweetNoteTweetEntities"
          },
          "text" : {
            "$ref" : "#/components/schemas/NoteTweetText"
          }
        },
        "description" : "The full-content of the Tweet, including text beyond 280 characters"
      },
      "Get2TweetsIdQuoteTweetsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "Get2UsersIdFollowersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdFollowersResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ResultCount" : {
        "type" : "integer",
        "description" : "The number of results returned in this response",
        "format" : "int32"
      },
      "UserSuspendComplianceSchema" : {
        "required" : [ "user_suspend" ],
        "type" : "object",
        "properties" : {
          "user_suspend" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserComplianceSchema"
            } ],
            "x-ballerina-name" : "userSuspend"
          }
        }
      },
      "Get2TweetsIdLikingUsersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2TweetsIdLikingUsersResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "CashtagEntity" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
        }, {
          "$ref" : "#/components/schemas/CashtagFields"
        } ]
      },
      "Oauth1PermissionsProblem" : {
        "description" : "A problem that indicates your client application does not have the required OAuth1 permissions for the requested endpoint",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "ConnectionExceptionProblem" : {
        "description" : "A problem that indicates something is wrong with the connection",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/ConnectionExceptionProblemAllOf2"
        } ]
      },
      "TweetId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers",
        "example" : "1346889436626259968"
      },
      "VideoPublicMetrics" : {
        "type" : "object",
        "properties" : {
          "view_count" : {
            "type" : "integer",
            "description" : "Number of times this video has been viewed",
            "format" : "int32",
            "x-ballerina-name" : "viewCount"
          }
        },
        "description" : "Engagement metrics for the Media at the time of the request"
      },
      "TweetLabelStreamResponseTweetLabelStreamResponseOneOf12" : {
        "required" : [ "errors" ],
        "type" : "object",
        "properties" : {
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "HashtagEntity" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
        }, {
          "$ref" : "#/components/schemas/HashtagFields"
        } ]
      },
      "DownloadExpiration" : {
        "type" : "string",
        "description" : "Expiration time of the download URL",
        "format" : "date-time",
        "example" : "2021-01-06T18:40:40Z"
      },
      "UserUndeleteComplianceSchema" : {
        "required" : [ "user_undelete" ],
        "type" : "object",
        "properties" : {
          "user_undelete" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserComplianceSchema"
            } ],
            "x-ballerina-name" : "userUndelete"
          }
        }
      },
      "UserEntitiesUrl" : {
        "type" : "object",
        "properties" : {
          "urls" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UrlEntity"
            }
          }
        },
        "description" : "Expanded details for the URL specified in the User's profile, with start and end indices"
      },
      "Get2ListsIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/List"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ComplianceJob" : {
        "required" : [ "created_at", "download_expires_at", "download_url", "id", "status", "type", "upload_expires_at", "upload_url" ],
        "type" : "object",
        "properties" : {
          "download_expires_at" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DownloadExpiration"
            } ],
            "x-ballerina-name" : "downloadExpiresAt"
          },
          "download_url" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/DownloadUrl"
            } ],
            "x-ballerina-name" : "downloadUrl"
          },
          "name" : {
            "$ref" : "#/components/schemas/ComplianceJobName"
          },
          "upload_expires_at" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UploadExpiration"
            } ],
            "x-ballerina-name" : "uploadExpiresAt"
          },
          "created_at" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/CreatedAt"
            } ],
            "x-ballerina-name" : "createdAt"
          },
          "upload_url" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UploadUrl"
            } ],
            "x-ballerina-name" : "uploadUrl"
          },
          "id" : {
            "$ref" : "#/components/schemas/JobId"
          },
          "type" : {
            "$ref" : "#/components/schemas/ComplianceJobType"
          },
          "status" : {
            "$ref" : "#/components/schemas/ComplianceJobStatus"
          }
        }
      },
      "Get2TweetsCountsRecentResponseMeta" : {
        "type" : "object",
        "properties" : {
          "total_tweet_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Aggregate"
            } ],
            "x-ballerina-name" : "totalTweetCount"
          },
          "oldest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OldestId"
            } ],
            "x-ballerina-name" : "oldestId"
          },
          "newest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NewestId"
            } ],
            "x-ballerina-name" : "newestId"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          }
        }
      },
      "Position" : {
        "maxItems" : 2,
        "minItems" : 2,
        "type" : "array",
        "description" : "A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1) in the format `[longitude,latitude]`",
        "example" : [ -105.18816086351444, 40.247749999999996 ],
        "items" : {
          "type" : "number"
        }
      },
      "BookmarkMutationResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/BookmarkMutationResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "NoteTweetText" : {
        "type" : "string",
        "description" : "The note content of the Tweet",
        "example" : "Learn how to use the user Tweet timeline and user mention timeline endpoints in the X API v2 to explore Tweet\\u2026 https:\\/\\/t.co\\/56a0vZUx7i"
      },
      "Get2UsersIdListMembershipsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "UsersRetweetsCreateResponseData" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "retweeted" : {
            "type" : "boolean"
          }
        }
      },
      "UsageFields" : {
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "description" : "The time period for the usage",
            "format" : "date-time",
            "example" : "2021-01-06T18:40:40Z"
          },
          "usage" : {
            "type" : "integer",
            "description" : "The usage value",
            "format" : "int32"
          }
        },
        "description" : "Represents the data for Usage"
      },
      "Geo" : {
        "required" : [ "bbox", "properties", "type" ],
        "type" : "object",
        "properties" : {
          "bbox" : {
            "maxItems" : 4,
            "minItems" : 4,
            "type" : "array",
            "example" : [ -105.193475, 39.60973, -105.053164, 39.761974 ],
            "items" : {
              "maximum" : 180,
              "minimum" : -180,
              "type" : "number",
              "format" : "double"
            }
          },
          "geometry" : {
            "$ref" : "#/components/schemas/Point"
          },
          "type" : {
            "type" : "string",
            "enum" : [ "Feature" ]
          },
          "properties" : {
            "type" : "object"
          }
        }
      },
      "Variant" : {
        "type" : "object",
        "properties" : {
          "bit_rate" : {
            "type" : "integer",
            "description" : "The bit rate of the media",
            "x-ballerina-name" : "bitRate"
          },
          "content_type" : {
            "type" : "string",
            "description" : "The content type of the media",
            "x-ballerina-name" : "contentType"
          },
          "url" : {
            "type" : "string",
            "description" : "The url to the media",
            "format" : "uri"
          }
        }
      },
      "Get2UsersIdTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdTweetsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UsersRetweetsDeleteResponseData" : {
        "type" : "object",
        "properties" : {
          "retweeted" : {
            "type" : "boolean"
          }
        }
      },
      "Get2UsersMeResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/User"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetEditComplianceObjectSchema" : {
        "required" : [ "edit_tweet_ids", "event_at", "initial_tweet_id", "tweet" ],
        "type" : "object",
        "properties" : {
          "initial_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "initialTweetId"
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "tweet" : {
            "$ref" : "#/components/schemas/TweetEditComplianceObjectSchemaTweet"
          },
          "edit_tweet_ids" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TweetId"
            },
            "x-ballerina-name" : "editTweetIds"
          }
        }
      },
      "TweetComplianceData" : {
        "description" : "Tweet compliance data",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TweetDeleteComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/TweetWithheldComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/TweetDropComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/TweetUndropComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/TweetEditComplianceSchema"
        } ]
      },
      "MuteUserMutationResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/MuteUserMutationResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Rule" : {
        "required" : [ "value" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/RuleId"
          },
          "tag" : {
            "$ref" : "#/components/schemas/RuleTag"
          },
          "value" : {
            "$ref" : "#/components/schemas/RuleValue"
          }
        },
        "description" : "A user-provided stream filtering rule"
      },
      "TweetCreateRequestGeo" : {
        "type" : "object",
        "properties" : {
          "place_id" : {
            "type" : "string",
            "x-ballerina-name" : "placeId"
          }
        },
        "additionalProperties" : false,
        "description" : "Place ID being attached to the Tweet for geo location"
      },
      "ListFollowedRequest" : {
        "required" : [ "list_id" ],
        "type" : "object",
        "properties" : {
          "list_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ListId"
            } ],
            "x-ballerina-name" : "listId"
          }
        }
      },
      "ClientForbiddenProblemAllOf2" : {
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string",
            "enum" : [ "official-client-forbidden", "client-not-enrolled" ]
          },
          "registration_url" : {
            "type" : "string",
            "format" : "uri",
            "x-ballerina-name" : "registrationUrl"
          }
        }
      },
      "RulesRequestSummary" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/RulesRequestSummaryOneOf1"
        }, {
          "$ref" : "#/components/schemas/RulesRequestSummaryRulesRequestSummaryOneOf12"
        } ]
      },
      "TweetNoteTweetEntities" : {
        "type" : "object",
        "properties" : {
          "cashtags" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CashtagEntity"
            }
          },
          "urls" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UrlEntity"
            }
          },
          "hashtags" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/HashtagEntity"
            }
          },
          "mentions" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MentionEntity"
            }
          }
        }
      },
      "TweetNoticeSchema" : {
        "required" : [ "public_tweet_notice" ],
        "type" : "object",
        "properties" : {
          "public_tweet_notice" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetNotice"
            } ],
            "x-ballerina-name" : "publicTweetNotice"
          }
        }
      },
      "UsageCapExceededProblem" : {
        "description" : "A problem that indicates that a usage cap has been exceeded",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/UsageCapExceededProblemAllOf2"
        } ]
      },
      "UserComplianceData" : {
        "description" : "User compliance data",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/UserProtectComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/UserUnprotectComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/UserDeleteComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/UserUndeleteComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/UserSuspendComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/UserUnsuspendComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/UserWithheldComplianceSchema"
        }, {
          "$ref" : "#/components/schemas/UserScrubGeoSchema"
        }, {
          "$ref" : "#/components/schemas/UserProfileModificationComplianceSchema"
        } ]
      },
      "ListPinnedResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ListPinnedResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetNotice" : {
        "required" : [ "application", "event_at", "event_type", "tweet" ],
        "type" : "object",
        "properties" : {
          "event_type" : {
            "type" : "string",
            "description" : "The type of label on the Tweet",
            "example" : "misleading",
            "x-ballerina-name" : "eventType"
          },
          "application" : {
            "type" : "string",
            "description" : "If the label is being applied or removed. Possible values are ‘apply’ or ‘remove’",
            "example" : "apply"
          },
          "label_title" : {
            "type" : "string",
            "description" : "Title/header of the Tweet label",
            "x-ballerina-name" : "labelTitle"
          },
          "details" : {
            "type" : "string",
            "description" : "Information shown on the Tweet label"
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "tweet" : {
            "$ref" : "#/components/schemas/TweetNoticeTweet"
          },
          "extended_details_url" : {
            "type" : "string",
            "description" : "Link to more information about this kind of label",
            "x-ballerina-name" : "extendedDetailsUrl"
          }
        }
      },
      "Url" : {
        "type" : "string",
        "description" : "A validly formatted URL",
        "format" : "uri",
        "example" : "https://developer.twitter.com/en/docs/twitter-api"
      },
      "TweetHideResponseData" : {
        "type" : "object",
        "properties" : {
          "hidden" : {
            "type" : "boolean"
          }
        }
      },
      "CreateTextMessageRequest" : {
        "required" : [ "text" ],
        "type" : "object",
        "properties" : {
          "attachments" : {
            "$ref" : "#/components/schemas/DmAttachments"
          },
          "text" : {
            "minLength" : 1,
            "type" : "string",
            "description" : "Text of the message"
          }
        }
      },
      "Get2SpacesIdTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2SpacesIdTweetsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetCount" : {
        "type" : "integer",
        "description" : "The count for the bucket"
      },
      "ResourceUnavailableProblemAllOf2" : {
        "required" : [ "parameter", "resource_id", "resource_type" ],
        "type" : "object",
        "properties" : {
          "parameter" : {
            "minLength" : 1,
            "type" : "string"
          },
          "resource_type" : {
            "type" : "string",
            "enum" : [ "user", "tweet", "media", "list", "space" ],
            "x-ballerina-name" : "resourceType"
          },
          "resource_id" : {
            "type" : "string",
            "x-ballerina-name" : "resourceId"
          }
        }
      },
      "RuleTag" : {
        "type" : "string",
        "description" : "A tag meant for the labeling of user provided rules",
        "example" : "Non-retweeted coffee Posts"
      },
      "InvalidRuleProblem" : {
        "description" : "The rule you have submitted is invalid",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "Get2TweetsIdRetweetedByResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2TweetsIdRetweetedByResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UrlFields" : {
        "required" : [ "url" ],
        "type" : "object",
        "properties" : {
          "display_url" : {
            "type" : "string",
            "description" : "The URL as displayed in the X client",
            "example" : "twittercommunity.com/t/introducing-…",
            "x-ballerina-name" : "displayUrl"
          },
          "images" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UrlImage"
            }
          },
          "expanded_url" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/Url"
            } ],
            "x-ballerina-name" : "expandedUrl"
          },
          "unwound_url" : {
            "type" : "string",
            "description" : "Fully resolved url",
            "format" : "uri",
            "example" : "https://twittercommunity.com/t/introducing-the-v2-follow-lookup-endpoints/147118",
            "x-ballerina-name" : "unwoundUrl"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the URL landing page",
            "example" : "This is a description of the website."
          },
          "title" : {
            "type" : "string",
            "description" : "Title of the page the URL points to",
            "example" : "Introducing the v2 follow lookup endpoints"
          },
          "media_key" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaKey"
            } ],
            "x-ballerina-name" : "mediaKey"
          },
          "url" : {
            "$ref" : "#/components/schemas/Url"
          },
          "status" : {
            "$ref" : "#/components/schemas/HttpStatusCode"
          }
        },
        "description" : "Represent the portion of text recognized as a URL"
      },
      "Usage" : {
        "type" : "object",
        "properties" : {
          "cap_reset_day" : {
            "type" : "integer",
            "description" : "Number of days left for the Tweet cap to reset",
            "format" : "int32",
            "x-ballerina-name" : "capResetDay"
          },
          "project_usage" : {
            "type" : "integer",
            "description" : "The number of Posts read in this project",
            "format" : "int32",
            "x-ballerina-name" : "projectUsage"
          },
          "project_cap" : {
            "type" : "integer",
            "description" : "Total number of Posts that can be read in this project per month",
            "format" : "int32",
            "x-ballerina-name" : "projectCap"
          },
          "project_id" : {
            "type" : "string",
            "description" : "The unique identifier for this project",
            "format" : "^[0-9]{1,19}$",
            "x-ballerina-name" : "projectId"
          },
          "daily_client_app_usage" : {
            "minItems" : 1,
            "type" : "array",
            "description" : "The daily usage breakdown for each Client Application a project",
            "items" : {
              "$ref" : "#/components/schemas/ClientAppUsage"
            },
            "x-ballerina-name" : "dailyClientAppUsage"
          },
          "daily_project_usage" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UsageDailyProjectUsage"
            } ],
            "x-ballerina-name" : "dailyProjectUsage"
          }
        },
        "description" : "Usage per client app"
      },
      "Get2UsersIdListMembershipsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/List"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdListMembershipsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetCreateRequest" : {
        "type" : "object",
        "properties" : {
          "geo" : {
            "$ref" : "#/components/schemas/TweetCreateRequestGeo"
          },
          "nullcast" : {
            "type" : "boolean",
            "description" : "Nullcasted (promoted-only) Posts do not appear in the public timeline and are not served to followers",
            "default" : false
          },
          "for_super_followers_only" : {
            "type" : "boolean",
            "description" : "Exclusive Tweet for super followers",
            "default" : false,
            "x-ballerina-name" : "forSuperFollowersOnly"
          },
          "quote_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "quoteTweetId"
          },
          "direct_message_deep_link" : {
            "type" : "string",
            "description" : "Link to take the conversation from the public timeline to a private Direct Message",
            "x-ballerina-name" : "directMessageDeepLink"
          },
          "card_uri" : {
            "type" : "string",
            "description" : "Card Uri Parameter. This is mutually exclusive from Quote Tweet Id, Poll, Media, and Direct Message Deep Link",
            "x-ballerina-name" : "cardUri"
          },
          "media" : {
            "$ref" : "#/components/schemas/TweetCreateRequestMedia"
          },
          "poll" : {
            "$ref" : "#/components/schemas/TweetCreateRequestPoll"
          },
          "text" : {
            "$ref" : "#/components/schemas/TweetText"
          },
          "reply" : {
            "$ref" : "#/components/schemas/TweetCreateRequestReply"
          },
          "reply_settings" : {
            "type" : "string",
            "description" : "Settings to indicate who can reply to the Tweet",
            "enum" : [ "following", "mentionedUsers", "subscribers" ],
            "x-ballerina-name" : "replySettings"
          }
        },
        "additionalProperties" : false
      },
      "Get2SpacesSearchResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Space"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2SpacesSearchResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "TweetDeleteComplianceSchema" : {
        "required" : [ "delete" ],
        "type" : "object",
        "properties" : {
          "delete" : {
            "$ref" : "#/components/schemas/TweetComplianceSchema"
          }
        }
      },
      "UnsupportedAuthenticationProblem" : {
        "description" : "A problem that indicates that the authentication used is not supported",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "ListFollowedResponseData" : {
        "type" : "object",
        "properties" : {
          "following" : {
            "type" : "boolean"
          }
        }
      },
      "ReplySettingsWithVerifiedUsers" : {
        "pattern" : "^[A-Za-z]{1,12}$",
        "type" : "string",
        "description" : "Shows who can reply a Tweet. Fields returned are everyone, mentioned_users, subscribers, verified and following",
        "enum" : [ "everyone", "mentionedUsers", "following", "other", "subscribers", "verified" ]
      },
      "PhotoAllOf2" : {
        "type" : "object",
        "properties" : {
          "alt_text" : {
            "type" : "string",
            "x-ballerina-name" : "altText"
          },
          "url" : {
            "type" : "string",
            "format" : "uri"
          }
        }
      },
      "TweetComplianceSchema" : {
        "required" : [ "event_at", "tweet" ],
        "type" : "object",
        "properties" : {
          "quote_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "quoteTweetId"
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "tweet" : {
            "$ref" : "#/components/schemas/TweetComplianceSchemaTweet"
          }
        }
      },
      "SpaceTopics" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the given topic"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the given topic"
          },
          "id" : {
            "type" : "string",
            "description" : "An ID suitable for use in the REST API"
          }
        },
        "description" : "The X Topic object",
        "example" : "{\"description\":\"All about technology\",\"id\":\"848920371311001600\",\"name\":\"Technology\"}"
      },
      "PaginationToken36" : {
        "minLength" : 1,
        "type" : "string",
        "description" : "A base36 pagination token"
      },
      "ClientDisconnectedProblem" : {
        "description" : "Your client has gone away",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "EntityIndicesInclusiveInclusive" : {
        "required" : [ "end", "start" ],
        "type" : "object",
        "properties" : {
          "start" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Index (zero-based) at which position this entity starts.  The index is inclusive",
            "example" : 50
          },
          "end" : {
            "minimum" : 0,
            "type" : "integer",
            "description" : "Index (zero-based) at which position this entity ends.  The index is inclusive",
            "example" : 61
          }
        },
        "description" : "Represent a boundary range (start and end index) for a recognized entity (for example a hashtag or a mention). `start` must be smaller than `end`.  The start index is inclusive, the end index is inclusive"
      },
      "BookmarkAddRequest" : {
        "required" : [ "tweet_id" ],
        "type" : "object",
        "properties" : {
          "tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "tweetId"
          }
        }
      },
      "Get2TweetsSearchAllResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2TweetsSearchAllResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ResourceUnauthorizedProblemAllOf2" : {
        "required" : [ "parameter", "resource_id", "resource_type", "section", "value" ],
        "type" : "object",
        "properties" : {
          "parameter" : {
            "type" : "string"
          },
          "resource_type" : {
            "type" : "string",
            "enum" : [ "user", "tweet", "media", "list", "space" ],
            "x-ballerina-name" : "resourceType"
          },
          "resource_id" : {
            "type" : "string",
            "x-ballerina-name" : "resourceId"
          },
          "section" : {
            "type" : "string",
            "enum" : [ "data", "includes" ]
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "TweetTakedownComplianceSchema" : {
        "required" : [ "event_at", "tweet", "withheld_in_countries" ],
        "type" : "object",
        "properties" : {
          "quote_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "quoteTweetId"
          },
          "withheld_in_countries" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CountryCode"
            },
            "x-ballerina-name" : "withheldInCountries"
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "tweet" : {
            "$ref" : "#/components/schemas/TweetTakedownComplianceSchemaTweet"
          }
        }
      },
      "Get2TweetsSample10StreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "LikesComplianceStreamResponse" : {
        "description" : "Likes compliance stream events",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/LikesComplianceStreamResponseOneOf1"
        }, {
          "$ref" : "#/components/schemas/LikesComplianceStreamResponseLikesComplianceStreamResponseOneOf12"
        } ]
      },
      "Get2UsersIdTimelinesReverseChronologicalResponseMeta" : {
        "type" : "object",
        "properties" : {
          "oldest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OldestId"
            } ],
            "x-ballerina-name" : "oldestId"
          },
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "newest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NewestId"
            } ],
            "x-ballerina-name" : "newestId"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "ListMutateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ListMutateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UrlImage" : {
        "type" : "object",
        "properties" : {
          "width" : {
            "$ref" : "#/components/schemas/MediaWidth"
          },
          "url" : {
            "$ref" : "#/components/schemas/Url"
          },
          "height" : {
            "$ref" : "#/components/schemas/MediaHeight"
          }
        },
        "description" : "Represent the information for the URL image"
      },
      "UsageCapExceededProblemAllOf2" : {
        "type" : "object",
        "properties" : {
          "period" : {
            "type" : "string",
            "enum" : [ "Daily", "Monthly" ]
          },
          "scope" : {
            "type" : "string",
            "enum" : [ "Account", "Product" ]
          }
        }
      },
      "NewestId" : {
        "type" : "string",
        "description" : "The newest id in this response"
      },
      "Get2UsersIdLikedTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdLikedTweetsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2TweetsSearchRecentResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2TweetsSearchRecentResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "PollId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "Unique identifier of this poll",
        "example" : "1365059861688410112"
      },
      "DmAttachments" : {
        "type" : "array",
        "description" : "Attachments to a DM Event",
        "items" : {
          "$ref" : "#/components/schemas/DmMediaAttachment"
        }
      },
      "RuleValue" : {
        "type" : "string",
        "description" : "The filterlang value of the rule",
        "example" : "coffee -is:retweet"
      },
      "CashtagFields" : {
        "required" : [ "tag" ],
        "type" : "object",
        "properties" : {
          "tag" : {
            "type" : "string",
            "example" : "TWTR"
          }
        },
        "description" : "Represent the portion of text recognized as a Cashtag, and its start and end position within the text"
      },
      "DmConversationId" : {
        "pattern" : "^([0-9]{1,19}-[0-9]{1,19}|[0-9]{15,19})$",
        "type" : "string",
        "description" : "Unique identifier of a DM conversation. This can either be a numeric string, or a pair of numeric strings separated by a '-' character in the case of one-on-one DM Conversations",
        "example" : "123123123-456456456"
      },
      "LikesComplianceStreamResponseOneOf1" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/LikeComplianceSchema"
          }
        },
        "description" : "Compliance event"
      },
      "TweetOrganicMetrics" : {
        "required" : [ "impression_count", "like_count", "reply_count", "retweet_count" ],
        "type" : "object",
        "properties" : {
          "like_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been liked",
            "x-ballerina-name" : "likeCount"
          },
          "reply_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been replied to",
            "x-ballerina-name" : "replyCount"
          },
          "retweet_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been Retweeted",
            "x-ballerina-name" : "retweetCount"
          },
          "impression_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been viewed",
            "x-ballerina-name" : "impressionCount"
          }
        },
        "description" : "Organic nonpublic engagement metrics for the Tweet at the time of the request"
      },
      "UserScrubGeoSchema" : {
        "required" : [ "scrub_geo" ],
        "type" : "object",
        "properties" : {
          "scrub_geo" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserScrubGeoObjectSchema"
            } ],
            "x-ballerina-name" : "scrubGeo"
          }
        }
      },
      "Get2TweetsIdRetweetedByResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "UsersLikesCreateResponseData" : {
        "type" : "object",
        "properties" : {
          "liked" : {
            "type" : "boolean"
          }
        }
      },
      "Get2DmEventsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DmEvent"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Like" : {
        "type" : "object",
        "properties" : {
          "liked_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "likedTweetId"
          },
          "created_at" : {
            "type" : "string",
            "description" : "Creation time of the Tweet",
            "format" : "date-time",
            "example" : "2021-01-06T18:40:40Z",
            "x-ballerina-name" : "createdAt"
          },
          "liking_user_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "likingUserId"
          },
          "timestamp_ms" : {
            "type" : "integer",
            "description" : "Timestamp in milliseconds of creation",
            "format" : "int32",
            "x-ballerina-name" : "timestampMs"
          },
          "id" : {
            "$ref" : "#/components/schemas/LikeId"
          }
        },
        "description" : "A Like event, with the liking user and the tweet being liked"
      },
      "NonCompliantRulesProblem" : {
        "description" : "A problem that indicates the user's rule set is not compliant",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        } ]
      },
      "Get2DmConversationsIdDmEventsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "TweetHideResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TweetHideResponseData"
          }
        }
      },
      "Get2UsersIdBookmarksResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdBookmarksResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsageTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Usage"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2ComplianceJobsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "MediaWidth" : {
        "minimum" : 0,
        "type" : "integer",
        "description" : "The width of the media in pixels"
      },
      "FieldUnauthorizedProblemAllOf2" : {
        "required" : [ "field", "resource_type", "section" ],
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string"
          },
          "resource_type" : {
            "type" : "string",
            "enum" : [ "user", "tweet", "media", "list", "space" ],
            "x-ballerina-name" : "resourceType"
          },
          "section" : {
            "type" : "string",
            "enum" : [ "data", "includes" ]
          }
        }
      },
      "UnlikeComplianceSchemaFavorite" : {
        "required" : [ "id", "user_id" ],
        "type" : "object",
        "properties" : {
          "user_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "userId"
          },
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }
      },
      "Get2DmConversationsWithParticipantIdDmEventsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "TweetUnviewableTweet" : {
        "required" : [ "author_id", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "author_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "authorId"
          }
        }
      },
      "ListMutateResponseData" : {
        "type" : "object",
        "properties" : {
          "is_member" : {
            "type" : "boolean",
            "x-ballerina-name" : "isMember"
          }
        }
      },
      "Get2SpacesByCreatorIdsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Space"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2SpacesByCreatorIdsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsersIdOwnedListsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/List"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdOwnedListsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "OldestId" : {
        "type" : "string",
        "description" : "The oldest id in this response"
      },
      "Get2UsersIdTweetsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "oldest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/OldestId"
            } ],
            "x-ballerina-name" : "oldestId"
          },
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "newest_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NewestId"
            } ],
            "x-ballerina-name" : "newestId"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "ListCreateResponseData" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of this List"
          },
          "id" : {
            "$ref" : "#/components/schemas/ListId"
          }
        },
        "description" : "A X List is a curated group of accounts"
      },
      "CreateComplianceJobResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ComplianceJob"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "SearchCount" : {
        "required" : [ "end", "start", "tweet_count" ],
        "type" : "object",
        "properties" : {
          "tweet_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetCount"
            } ],
            "x-ballerina-name" : "tweetCount"
          },
          "start" : {
            "$ref" : "#/components/schemas/Start"
          },
          "end" : {
            "$ref" : "#/components/schemas/End"
          }
        },
        "description" : "Represent a Search Count Result"
      },
      "ContextAnnotationDomainFields" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Name of the context annotation domain"
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the context annotation domain"
          },
          "id" : {
            "pattern" : "^[0-9]{1,19}$",
            "type" : "string",
            "description" : "The unique id for a context annotation domain"
          }
        },
        "description" : "Represents the data for the context annotation domain"
      },
      "PlaceId" : {
        "type" : "string",
        "description" : "The identifier for this place",
        "example" : "f7eb2fa2fea288b1"
      },
      "Get2UsersIdTimelinesReverseChronologicalResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdTimelinesReverseChronologicalResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MuteUserMutationResponseData" : {
        "type" : "object",
        "properties" : {
          "muting" : {
            "type" : "boolean"
          }
        }
      },
      "Media" : {
        "required" : [ "type" ],
        "type" : "object",
        "properties" : {
          "width" : {
            "$ref" : "#/components/schemas/MediaWidth"
          },
          "type" : {
            "type" : "string"
          },
          "media_key" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/MediaKey"
            } ],
            "x-ballerina-name" : "mediaKey"
          },
          "height" : {
            "$ref" : "#/components/schemas/MediaHeight"
          }
        },
        "discriminator" : {
          "propertyName" : "type",
          "mapping" : {
            "animated_gif" : "#/components/schemas/AnimatedGif",
            "photo" : "#/components/schemas/Photo",
            "video" : "#/components/schemas/Video"
          }
        }
      },
      "PaginationTokenLong" : {
        "maxLength" : 19,
        "minLength" : 1,
        "type" : "string",
        "description" : "A 'long' pagination token"
      },
      "Trend" : {
        "type" : "object",
        "properties" : {
          "tweet_count" : {
            "type" : "integer",
            "description" : "Number of Posts in this trend",
            "format" : "int32",
            "x-ballerina-name" : "tweetCount"
          },
          "trend_name" : {
            "type" : "string",
            "description" : "Name of the trend",
            "x-ballerina-name" : "trendName"
          }
        },
        "description" : "A trend"
      },
      "UsersRetweetsDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/UsersRetweetsDeleteResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "AddOrDeleteRulesResponse" : {
        "required" : [ "meta" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "type" : "array",
            "description" : "All user-specified stream filtering rules that were created",
            "items" : {
              "$ref" : "#/components/schemas/Rule"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/RulesResponseMetadata"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "A response from modifying user-specified stream filtering rules"
      },
      "DeleteRulesRequestDelete" : {
        "type" : "object",
        "properties" : {
          "values" : {
            "type" : "array",
            "description" : "Values of all deleted user-specified stream filtering rules",
            "items" : {
              "$ref" : "#/components/schemas/RuleValue"
            }
          },
          "ids" : {
            "type" : "array",
            "description" : "IDs of all deleted user-specified stream filtering rules",
            "items" : {
              "$ref" : "#/components/schemas/RuleId"
            }
          }
        },
        "description" : "IDs and values of all deleted user-specified stream filtering rules"
      },
      "TweetNonPublicMetrics" : {
        "type" : "object",
        "properties" : {
          "impression_count" : {
            "type" : "integer",
            "description" : "Number of times this Tweet has been viewed",
            "format" : "int32",
            "x-ballerina-name" : "impressionCount"
          }
        },
        "description" : "Nonpublic engagement metrics for the Tweet at the time of the request"
      },
      "Get2SpacesSearchResponseMeta" : {
        "type" : "object",
        "properties" : {
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "Get2ComplianceJobsIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ComplianceJob"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListUnpinResponseData" : {
        "type" : "object",
        "properties" : {
          "pinned" : {
            "type" : "boolean"
          }
        }
      },
      "Get2DmEventsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "ComplianceJobStatus" : {
        "type" : "string",
        "description" : "Status of a compliance job",
        "enum" : [ "created", "in_progress", "failed", "complete", "expired" ]
      },
      "CreateMessageRequest" : {
        "anyOf" : [ {
          "$ref" : "#/components/schemas/CreateTextMessageRequest"
        }, {
          "$ref" : "#/components/schemas/CreateAttachmentsMessageRequest"
        } ]
      },
      "TweetCreateResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TweetCreateResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MediaHeight" : {
        "minimum" : 0,
        "type" : "integer",
        "description" : "The height of the media in pixels"
      },
      "TweetUndropComplianceSchema" : {
        "required" : [ "undrop" ],
        "type" : "object",
        "properties" : {
          "undrop" : {
            "$ref" : "#/components/schemas/TweetComplianceSchema"
          }
        }
      },
      "Get2UsersIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/User"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListDeleteResponseData" : {
        "type" : "object",
        "properties" : {
          "deleted" : {
            "type" : "boolean"
          }
        }
      },
      "FilteredStreamingTweetResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "matching_rules" : {
            "type" : "array",
            "description" : "The list of rules which matched the Tweet",
            "items" : {
              "$ref" : "#/components/schemas/FilteredStreamingTweetResponseMatchingRules"
            },
            "x-ballerina-name" : "matchingRules"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "A Tweet or error that can be returned by the streaming Tweet API. The values returned with a successful streamed Tweet includes the user provided rules that the Tweet matched"
      },
      "TweetLabelStreamResponse" : {
        "description" : "Tweet label stream events",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TweetLabelStreamResponseOneOf1"
        }, {
          "$ref" : "#/components/schemas/TweetLabelStreamResponseTweetLabelStreamResponseOneOf12"
        } ]
      },
      "User" : {
        "required" : [ "id", "name", "username" ],
        "type" : "object",
        "properties" : {
          "pinned_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "pinnedTweetId"
          },
          "connection_status" : {
            "minItems" : 0,
            "type" : "array",
            "description" : "Returns detailed information about the relationship between two users",
            "items" : {
              "type" : "string",
              "description" : "Type of connection between users.",
              "enum" : [ "follow_request_received", "follow_request_sent", "blocking", "followed_by", "following", "muting" ]
            },
            "x-ballerina-name" : "connectionStatus"
          },
          "public_metrics" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserPublicMetrics"
            } ],
            "x-ballerina-name" : "publicMetrics"
          },
          "verified" : {
            "type" : "boolean",
            "description" : "Indicate if this User is a verified X User"
          },
          "created_at" : {
            "type" : "string",
            "description" : "Creation time of this User",
            "format" : "date-time",
            "x-ballerina-name" : "createdAt"
          },
          "description" : {
            "type" : "string",
            "description" : "The text of this User's profile description (also known as bio), if the User provided one"
          },
          "profile_image_url" : {
            "type" : "string",
            "description" : "The URL to the profile image for this User",
            "format" : "uri",
            "x-ballerina-name" : "profileImageUrl"
          },
          "receives_your_dm" : {
            "type" : "boolean",
            "description" : "Indicates if you can send a DM to this User",
            "x-ballerina-name" : "receivesYourDm"
          },
          "verified_type" : {
            "type" : "string",
            "description" : "The X Blue verified type of the user, eg: blue, government, business or none",
            "enum" : [ "blue", "government", "business", "none" ],
            "x-ballerina-name" : "verifiedType"
          },
          "withheld" : {
            "$ref" : "#/components/schemas/UserWithheld"
          },
          "url" : {
            "type" : "string",
            "description" : "The URL specified in the User's profile"
          },
          "most_recent_tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "mostRecentTweetId"
          },
          "protected" : {
            "type" : "boolean",
            "description" : "Indicates if this User has chosen to protect their Posts (in other words, if this User's Posts are private)"
          },
          "entities" : {
            "$ref" : "#/components/schemas/UserEntities"
          },
          "name" : {
            "type" : "string",
            "description" : "The friendly name of this User, as shown on their profile"
          },
          "location" : {
            "type" : "string",
            "description" : "The location specified in the User's profile, if the User provided one. As this is a freeform value, it may not indicate a valid location, but it may be fuzzily evaluated when performing searches with location queries"
          },
          "id" : {
            "$ref" : "#/components/schemas/UserId"
          },
          "subscription_type" : {
            "type" : "string",
            "description" : "The X Blue subscription type of the user, eg: Basic, Premium, PremiumPlus or None",
            "enum" : [ "Basic", "Premium", "PremiumPlus", "None" ],
            "x-ballerina-name" : "subscriptionType"
          },
          "username" : {
            "$ref" : "#/components/schemas/UserName"
          }
        },
        "description" : "The X User object",
        "example" : {
          "created_at" : "2013-12-14T04:35:55Z",
          "id" : "2244994945",
          "name" : "X Dev",
          "protected" : false,
          "username" : "TwitterDev"
        }
      },
      "NextToken" : {
        "minLength" : 1,
        "type" : "string",
        "description" : "The next token"
      },
      "RuleId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "Unique identifier of this rule",
        "example" : "120897978112909812"
      },
      "RulesRequestSummaryOneOf1" : {
        "required" : [ "created", "invalid", "not_created", "valid" ],
        "type" : "object",
        "properties" : {
          "valid" : {
            "type" : "integer",
            "description" : "Number of valid user-specified stream filtering rules",
            "format" : "int32",
            "example" : 1
          },
          "not_created" : {
            "type" : "integer",
            "description" : "Number of user-specified stream filtering rules that were not created",
            "format" : "int32",
            "example" : 1,
            "x-ballerina-name" : "notCreated"
          },
          "created" : {
            "type" : "integer",
            "description" : "Number of user-specified stream filtering rules that were created",
            "format" : "int32",
            "example" : 1
          },
          "invalid" : {
            "type" : "integer",
            "description" : "Number of invalid user-specified stream filtering rules",
            "format" : "int32",
            "example" : 1
          }
        },
        "description" : "A summary of the results of the addition of user-specified stream filtering rules"
      },
      "DuplicateRuleProblem" : {
        "description" : "The rule you have submitted is a duplicate",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/DuplicateRuleProblemAllOf2"
        } ]
      },
      "InvalidRequestProblemErrors" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "UserTakedownComplianceSchema" : {
        "required" : [ "event_at", "user", "withheld_in_countries" ],
        "type" : "object",
        "properties" : {
          "withheld_in_countries" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CountryCode"
            },
            "x-ballerina-name" : "withheldInCountries"
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserTakedownComplianceSchemaUser"
          }
        }
      },
      "TweetCreateResponseData" : {
        "required" : [ "id", "text" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "text" : {
            "$ref" : "#/components/schemas/TweetText"
          }
        }
      },
      "TweetEditComplianceObjectSchemaTweet" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          }
        }
      },
      "Get2LikesFirehoseStreamResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Like"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsersIdMutingResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdMutingResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MediaKey" : {
        "pattern" : "^([0-9]+)_([0-9]+)$",
        "type" : "string",
        "description" : "The Media Key identifier for this attachment"
      },
      "Get2TweetsFirehoseStreamLangJaResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/Tweet"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "ListId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "The unique identifier of this List",
        "example" : "1146654567674912769"
      },
      "Get2DmConversationsIdDmEventsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DmEvent"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2DmConversationsIdDmEventsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UserUnsuspendComplianceSchema" : {
        "required" : [ "user_unsuspend" ],
        "type" : "object",
        "properties" : {
          "user_unsuspend" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserComplianceSchema"
            } ],
            "x-ballerina-name" : "userUnsuspend"
          }
        }
      },
      "TopicId" : {
        "type" : "string",
        "description" : "Unique identifier of this Topic"
      },
      "TweetEditComplianceSchema" : {
        "required" : [ "tweet_edit" ],
        "type" : "object",
        "properties" : {
          "tweet_edit" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetEditComplianceObjectSchema"
            } ],
            "x-ballerina-name" : "tweetEdit"
          }
        }
      },
      "OperationalDisconnectProblem" : {
        "description" : "You have been disconnected for operational reasons",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Problem"
        }, {
          "$ref" : "#/components/schemas/OperationalDisconnectProblemAllOf2"
        } ]
      },
      "CountryCode" : {
        "pattern" : "^[A-Z]{2}$",
        "type" : "string",
        "description" : "A two-letter ISO 3166-1 alpha-2 country code",
        "example" : "US"
      },
      "Topic" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the given topic",
            "example" : "Technology"
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the given topic",
            "example" : "All about technology"
          },
          "id" : {
            "$ref" : "#/components/schemas/TopicId"
          }
        },
        "description" : "The topic of a Space, as selected by its creator"
      },
      "Get2UsersIdFollowingResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "JobId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "Compliance Job ID",
        "example" : "1372966999991541762"
      },
      "TweetUnviewable" : {
        "required" : [ "application", "event_at", "tweet" ],
        "type" : "object",
        "properties" : {
          "application" : {
            "type" : "string",
            "description" : "If the label is being applied or removed. Possible values are ‘apply’ or ‘remove’",
            "example" : "apply"
          },
          "event_at" : {
            "type" : "string",
            "description" : "Event time",
            "format" : "date-time",
            "example" : "2021-07-06T18:40:40Z",
            "x-ballerina-name" : "eventAt"
          },
          "tweet" : {
            "$ref" : "#/components/schemas/TweetUnviewableTweet"
          }
        }
      },
      "Get2TweetsIdRetweetsResponseMeta" : {
        "type" : "object",
        "properties" : {
          "previous_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/PreviousToken"
            } ],
            "x-ballerina-name" : "previousToken"
          },
          "next_token" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/NextToken"
            } ],
            "x-ballerina-name" : "nextToken"
          },
          "result_count" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ResultCount"
            } ],
            "x-ballerina-name" : "resultCount"
          }
        }
      },
      "TweetComplianceStreamResponseOneOf1" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TweetComplianceData"
          }
        },
        "description" : "Compliance event"
      },
      "TweetLabelStreamResponseOneOf1" : {
        "required" : [ "data" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TweetLabelData"
          }
        },
        "description" : "Tweet Label event"
      },
      "UserProfileModificationComplianceSchema" : {
        "required" : [ "user_profile_modification" ],
        "type" : "object",
        "properties" : {
          "user_profile_modification" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserProfileModificationObjectSchema"
            } ],
            "x-ballerina-name" : "userProfileModification"
          }
        }
      },
      "Get2UsersIdPinnedListsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/List"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdPinnedListsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "MentionEntity" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/EntityIndicesInclusiveExclusive"
        }, {
          "$ref" : "#/components/schemas/MentionFields"
        } ]
      },
      "UsersLikesCreateRequest" : {
        "required" : [ "tweet_id" ],
        "type" : "object",
        "properties" : {
          "tweet_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/TweetId"
            } ],
            "x-ballerina-name" : "tweetId"
          }
        }
      },
      "ListDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/ListDeleteResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "SpaceId" : {
        "pattern" : "^[a-zA-Z0-9]{1,13}$",
        "type" : "string",
        "description" : "The unique identifier of this Space",
        "example" : "1SLjjRYNejbKM"
      },
      "TweetDeleteResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/TweetDeleteResponseData"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Error" : {
        "required" : [ "code", "message" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          }
        }
      },
      "UploadExpiration" : {
        "type" : "string",
        "description" : "Expiration time of the upload URL",
        "format" : "date-time",
        "example" : "2021-01-06T18:40:40Z"
      },
      "Point" : {
        "required" : [ "coordinates", "type" ],
        "type" : "object",
        "properties" : {
          "coordinates" : {
            "$ref" : "#/components/schemas/Position"
          },
          "type" : {
            "type" : "string",
            "example" : "Point",
            "enum" : [ "Point" ]
          }
        },
        "description" : "A [GeoJson Point](https://tools.ietf.org/html/rfc7946#section-3.1.2) geometry object"
      },
      "Get2UsersIdMentionsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2UsersIdMentionsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "UserScrubGeoObjectSchemaUser" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/UserId"
          }
        }
      },
      "Get2ListsIdTweetsResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Tweet"
            }
          },
          "meta" : {
            "$ref" : "#/components/schemas/Get2ListsIdTweetsResponseMeta"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Variants" : {
        "type" : "array",
        "description" : "An array of all available variants of the media",
        "items" : {
          "$ref" : "#/components/schemas/Variant"
        }
      },
      "TweetScopes" : {
        "type" : "object",
        "properties" : {
          "followers" : {
            "type" : "boolean",
            "description" : "Indicates if this Tweet is viewable by followers without the Tweet ID",
            "example" : false
          }
        },
        "description" : "The scopes for this tweet"
      },
      "ListCreateRequest" : {
        "required" : [ "name" ],
        "type" : "object",
        "properties" : {
          "private" : {
            "type" : "boolean",
            "default" : false
          },
          "name" : {
            "maxLength" : 25,
            "minLength" : 1,
            "type" : "string"
          },
          "description" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          }
        }
      },
      "UserId" : {
        "pattern" : "^[0-9]{1,19}$",
        "type" : "string",
        "description" : "Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers",
        "example" : "2244994945"
      },
      "TweetTakedownComplianceSchemaTweet" : {
        "required" : [ "author_id", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/TweetId"
          },
          "author_id" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/UserId"
            } ],
            "x-ballerina-name" : "authorId"
          }
        }
      },
      "Poll" : {
        "required" : [ "id", "options" ],
        "type" : "object",
        "properties" : {
          "voting_status" : {
            "type" : "string",
            "enum" : [ "open", "closed" ],
            "x-ballerina-name" : "votingStatus"
          },
          "duration_minutes" : {
            "maximum" : 10080,
            "minimum" : 5,
            "type" : "integer",
            "format" : "int32",
            "x-ballerina-name" : "durationMinutes"
          },
          "end_datetime" : {
            "type" : "string",
            "format" : "date-time",
            "x-ballerina-name" : "endDatetime"
          },
          "options" : {
            "maxItems" : 4,
            "minItems" : 2,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PollOption"
            }
          },
          "id" : {
            "$ref" : "#/components/schemas/PollId"
          }
        },
        "description" : "Represent a Poll attached to a Tweet"
      },
      "UserWithheld" : {
        "required" : [ "country_codes" ],
        "type" : "object",
        "properties" : {
          "scope" : {
            "type" : "string",
            "description" : "Indicates that the content being withheld is a `user`",
            "enum" : [ "user" ]
          },
          "country_codes" : {
            "minItems" : 1,
            "uniqueItems" : true,
            "type" : "array",
            "description" : "Provides a list of countries where this content is not available",
            "items" : {
              "$ref" : "#/components/schemas/CountryCode"
            },
            "x-ballerina-name" : "countryCodes"
          }
        },
        "description" : "Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country)"
      },
      "Get2DmEventsEventIdResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/DmEvent"
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      },
      "Get2UsersResponse" : {
        "type" : "object",
        "properties" : {
          "data" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          },
          "includes" : {
            "$ref" : "#/components/schemas/Expansions"
          },
          "errors" : {
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        }
      }
    },
    "parameters" : {
      "ComplianceJobFieldsParameter" : {
        "name" : "compliance_job.fields",
        "in" : "query",
        "description" : "A comma separated list of ComplianceJob fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a ComplianceJob object.",
          "example" : [ "created_at", "download_expires_at", "download_url", "id", "name", "resumable", "status", "type", "upload_expires_at", "upload_url" ],
          "items" : {
            "type" : "string",
            "enum" : [ "created_at", "download_expires_at", "download_url", "id", "name", "resumable", "status", "type", "upload_expires_at", "upload_url" ]
          }
        },
        "x-ballerina-name" : "complianceJobFields"
      },
      "DmConversationFieldsParameter" : {
        "name" : "dm_conversation.fields",
        "in" : "query",
        "description" : "A comma separated list of DmConversation fields to display.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a DmConversation object.",
          "example" : [ "id" ],
          "items" : {
            "type" : "string",
            "enum" : [ "id" ]
          }
        },
        "x-ballerina-name" : "dmConversationFields"
      },
      "DmEventExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The list of fields you can expand for a [DmEvent](#DmEvent) object. If the field has an ID, it can be expanded into a full object.",
          "example" : [ "attachments.media_keys", "participant_ids", "referenced_tweets.id", "sender_id" ],
          "items" : {
            "type" : "string",
            "enum" : [ "attachments.media_keys", "participant_ids", "referenced_tweets.id", "sender_id" ]
          }
        }
      },
      "DmEventFieldsParameter" : {
        "name" : "dm_event.fields",
        "in" : "query",
        "description" : "A comma separated list of DmEvent fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a DmEvent object.",
          "example" : [ "attachments", "created_at", "dm_conversation_id", "entities", "event_type", "id", "participant_ids", "referenced_tweets", "sender_id", "text" ],
          "items" : {
            "type" : "string",
            "enum" : [ "attachments", "created_at", "dm_conversation_id", "entities", "event_type", "id", "participant_ids", "referenced_tweets", "sender_id", "text" ]
          }
        },
        "x-ballerina-name" : "dmEventFields"
      },
      "LikeExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The list of fields you can expand for a [Like](#Like) object. If the field has an ID, it can be expanded into a full object.",
          "example" : [ "liked_tweet_id" ],
          "items" : {
            "type" : "string",
            "enum" : [ "liked_tweet_id" ]
          }
        }
      },
      "LikeFieldsParameter" : {
        "name" : "like.fields",
        "in" : "query",
        "description" : "A comma separated list of Like fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Like object.",
          "example" : [ "created_at", "id", "liked_tweet_id", "timestamp_ms" ],
          "items" : {
            "type" : "string",
            "enum" : [ "created_at", "id", "liked_tweet_id", "timestamp_ms" ]
          }
        },
        "x-ballerina-name" : "likeFields"
      },
      "ListExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The list of fields you can expand for a [List](#List) object. If the field has an ID, it can be expanded into a full object.",
          "example" : [ "owner_id" ],
          "items" : {
            "type" : "string",
            "enum" : [ "owner_id" ]
          }
        }
      },
      "ListFieldsParameter" : {
        "name" : "list.fields",
        "in" : "query",
        "description" : "A comma separated list of List fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a List object.",
          "example" : [ "created_at", "description", "follower_count", "id", "member_count", "name", "owner_id", "private" ],
          "items" : {
            "type" : "string",
            "enum" : [ "created_at", "description", "follower_count", "id", "member_count", "name", "owner_id", "private" ]
          }
        },
        "x-ballerina-name" : "listFields"
      },
      "MediaFieldsParameter" : {
        "name" : "media.fields",
        "in" : "query",
        "description" : "A comma separated list of Media fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Media object.",
          "example" : [ "alt_text", "duration_ms", "height", "media_key", "non_public_metrics", "organic_metrics", "preview_image_url", "promoted_metrics", "public_metrics", "type", "url", "variants", "width" ],
          "items" : {
            "type" : "string",
            "enum" : [ "alt_text", "duration_ms", "height", "media_key", "non_public_metrics", "organic_metrics", "preview_image_url", "promoted_metrics", "public_metrics", "type", "url", "variants", "width" ]
          }
        },
        "x-ballerina-name" : "mediaFields"
      },
      "PlaceFieldsParameter" : {
        "name" : "place.fields",
        "in" : "query",
        "description" : "A comma separated list of Place fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Place object.",
          "example" : [ "contained_within", "country", "country_code", "full_name", "geo", "id", "name", "place_type" ],
          "items" : {
            "type" : "string",
            "enum" : [ "contained_within", "country", "country_code", "full_name", "geo", "id", "name", "place_type" ]
          }
        },
        "x-ballerina-name" : "placeFields"
      },
      "PollFieldsParameter" : {
        "name" : "poll.fields",
        "in" : "query",
        "description" : "A comma separated list of Poll fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Poll object.",
          "example" : [ "duration_minutes", "end_datetime", "id", "options", "voting_status" ],
          "items" : {
            "type" : "string",
            "enum" : [ "duration_minutes", "end_datetime", "id", "options", "voting_status" ]
          }
        },
        "x-ballerina-name" : "pollFields"
      },
      "RulesCountFieldsParameter" : {
        "name" : "rules_count.fields",
        "in" : "query",
        "description" : "A comma separated list of RulesCount fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a RulesCount object.",
          "example" : [ "all_project_client_apps", "cap_per_client_app", "cap_per_project", "client_app_rules_count", "project_rules_count" ],
          "items" : {
            "type" : "string",
            "enum" : [ "all_project_client_apps", "cap_per_client_app", "cap_per_project", "client_app_rules_count", "project_rules_count" ]
          }
        },
        "x-ballerina-name" : "rulesCountFields"
      },
      "SearchCountFieldsParameter" : {
        "name" : "search_count.fields",
        "in" : "query",
        "description" : "A comma separated list of SearchCount fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a SearchCount object.",
          "example" : [ "end", "start", "tweet_count" ],
          "items" : {
            "type" : "string",
            "enum" : [ "end", "start", "tweet_count" ]
          }
        },
        "x-ballerina-name" : "searchCountFields"
      },
      "SpaceExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The list of fields you can expand for a [Space](#Space) object. If the field has an ID, it can be expanded into a full object.",
          "example" : [ "creator_id", "host_ids", "invited_user_ids", "speaker_ids", "topic_ids" ],
          "items" : {
            "type" : "string",
            "enum" : [ "creator_id", "host_ids", "invited_user_ids", "speaker_ids", "topic_ids" ]
          }
        }
      },
      "SpaceFieldsParameter" : {
        "name" : "space.fields",
        "in" : "query",
        "description" : "A comma separated list of Space fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Space object.",
          "example" : [ "created_at", "creator_id", "ended_at", "host_ids", "id", "invited_user_ids", "is_ticketed", "lang", "participant_count", "scheduled_start", "speaker_ids", "started_at", "state", "subscriber_count", "title", "topic_ids", "updated_at" ],
          "items" : {
            "type" : "string",
            "enum" : [ "created_at", "creator_id", "ended_at", "host_ids", "id", "invited_user_ids", "is_ticketed", "lang", "participant_count", "scheduled_start", "speaker_ids", "started_at", "state", "subscriber_count", "title", "topic_ids", "updated_at" ]
          }
        },
        "x-ballerina-name" : "spaceFields"
      },
      "TopicFieldsParameter" : {
        "name" : "topic.fields",
        "in" : "query",
        "description" : "A comma separated list of Topic fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Topic object.",
          "example" : [ "description", "id", "name" ],
          "items" : {
            "type" : "string",
            "enum" : [ "description", "id", "name" ]
          }
        },
        "x-ballerina-name" : "topicFields"
      },
      "TrendFieldsParameter" : {
        "name" : "trend.fields",
        "in" : "query",
        "description" : "A comma separated list of Trend fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Trend object.",
          "example" : [ "trend_name", "tweet_count" ],
          "items" : {
            "type" : "string",
            "enum" : [ "trend_name", "tweet_count" ]
          }
        },
        "x-ballerina-name" : "trendFields"
      },
      "TweetExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The list of fields you can expand for a [Tweet](#Tweet) object. If the field has an ID, it can be expanded into a full object.",
          "example" : [ "attachments.media_keys", "attachments.media_source_tweet", "attachments.poll_ids", "author_id", "edit_history_tweet_ids", "entities.mentions.username", "geo.place_id", "in_reply_to_user_id", "entities.note.mentions.username", "referenced_tweets.id", "referenced_tweets.id.author_id", "author_screen_name" ],
          "items" : {
            "type" : "string",
            "enum" : [ "attachments.media_keys", "attachments.media_source_tweet", "attachments.poll_ids", "author_id", "edit_history_tweet_ids", "entities.mentions.username", "geo.place_id", "in_reply_to_user_id", "entities.note.mentions.username", "referenced_tweets.id", "referenced_tweets.id.author_id", "author_screen_name" ]
          }
        }
      },
      "TweetFieldsParameter" : {
        "name" : "tweet.fields",
        "in" : "query",
        "description" : "A comma separated list of Tweet fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Tweet object.",
          "example" : [ "attachments", "author_id", "card_uri", "context_annotations", "conversation_id", "created_at", "edit_controls", "edit_history_tweet_ids", "entities", "geo", "id", "in_reply_to_user_id", "lang", "non_public_metrics", "note_tweet", "organic_metrics", "possibly_sensitive", "promoted_metrics", "public_metrics", "referenced_tweets", "reply_settings", "scopes", "source", "text", "username", "withheld" ],
          "items" : {
            "type" : "string",
            "enum" : [ "attachments", "author_id", "card_uri", "context_annotations", "conversation_id", "created_at", "edit_controls", "edit_history_tweet_ids", "entities", "geo", "id", "in_reply_to_user_id", "lang", "non_public_metrics", "note_tweet", "organic_metrics", "possibly_sensitive", "promoted_metrics", "public_metrics", "referenced_tweets", "reply_settings", "scopes", "source", "text", "username", "withheld" ]
          }
        },
        "x-ballerina-name" : "tweetFields"
      },
      "UsageFieldsParameter" : {
        "name" : "usage.fields",
        "in" : "query",
        "description" : "A comma separated list of Usage fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a Usage object.",
          "example" : [ "cap_reset_day", "daily_client_app_usage", "daily_project_usage", "project_cap", "project_id", "project_usage" ],
          "items" : {
            "type" : "string",
            "enum" : [ "cap_reset_day", "daily_client_app_usage", "daily_project_usage", "project_cap", "project_id", "project_usage" ]
          }
        },
        "x-ballerina-name" : "usageFields"
      },
      "UserExpansionsParameter" : {
        "name" : "expansions",
        "in" : "query",
        "description" : "A comma separated list of fields to expand",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The list of fields you can expand for a [User](#User) object. If the field has an ID, it can be expanded into a full object.",
          "example" : [ "most_recent_tweet_id", "pinned_tweet_id" ],
          "items" : {
            "type" : "string",
            "enum" : [ "most_recent_tweet_id", "pinned_tweet_id" ]
          }
        }
      },
      "UserFieldsParameter" : {
        "name" : "user.fields",
        "in" : "query",
        "description" : "A comma separated list of User fields to display",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minItems" : 1,
          "uniqueItems" : true,
          "type" : "array",
          "description" : "The fields available for a User object.",
          "example" : [ "connection_status", "created_at", "description", "entities", "id", "location", "most_recent_tweet_id", "name", "pinned_tweet_id", "profile_image_url", "protected", "public_metrics", "receives_your_dm", "subscription_type", "url", "username", "verified", "verified_type", "withheld" ],
          "items" : {
            "type" : "string",
            "enum" : [ "connection_status", "created_at", "description", "entities", "id", "location", "most_recent_tweet_id", "name", "pinned_tweet_id", "profile_image_url", "protected", "public_metrics", "receives_your_dm", "subscription_type", "url", "username", "verified", "verified_type", "withheld" ]
          }
        },
        "x-ballerina-name" : "userFields"
      }
    },
    "securitySchemes" : {
      "BearerToken" : {
        "type" : "http",
        "scheme" : "bearer"
      },
      "OAuth2UserToken" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://api.twitter.com/2/oauth2/authorize",
            "tokenUrl" : "https://api.twitter.com/2/oauth2/token",
            "scopes" : {
              "block.read" : "Accounts you’ve blocked.",
              "bookmark.read" : "Allows an app to read bookmarked Tweets",
              "bookmark.write" : "Allows an app to create and delete bookmarks",
              "dm.read" : "All your Direct Messages",
              "dm.write" : "Send and manage Direct Messages for you",
              "follows.read" : "People who follow you and people who you follow.",
              "follows.write" : "Follow and unfollow people for you.",
              "like.read" : "Tweets you’ve liked and likes you can view.",
              "like.write" : "Like and un-like Tweets for you.",
              "list.read" : "Lists, list members, and list followers of lists you’ve created or are a member of, including private lists.",
              "list.write" : "Create and manage Lists for you.",
              "mute.read" : "Accounts you’ve muted.",
              "mute.write" : "Mute and unmute accounts for you.",
              "offline.access" : "App can request refresh token.",
              "space.read" : "Access all of the Spaces you can see.",
              "tweet.moderate.write" : "Hide and unhide replies to your Tweets.",
              "tweet.read" : "All the Tweets you can see, including Tweets from protected accounts.",
              "tweet.write" : "Tweet and retweet for you.",
              "users.read" : "Any account you can see, including protected accounts. Any account you can see, including protected accounts."
            }
          }
        }
      },
      "UserToken" : {
        "type" : "http",
        "scheme" : "OAuth"
      }
    }
  }
}